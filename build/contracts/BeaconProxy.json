{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "11": "contracts/proxy/BeaconProxy.sol",
    "13": "contracts/proxy/IBeacon.sol",
    "16": "contracts/proxy/Proxy.sol",
    "3": "contracts/lib/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/proxy/BeaconProxy.sol",
    "exportedSymbols": {
      "BeaconProxy": [
        3802
      ]
    },
    "id": 3803,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3685,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:11"
      },
      {
        "absolutePath": "contracts/proxy/Proxy.sol",
        "file": "./Proxy.sol",
        "id": 3686,
        "nodeType": "ImportDirective",
        "scope": 3803,
        "sourceUnit": 4121,
        "src": "66:21:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/proxy/IBeacon.sol",
        "file": "./IBeacon.sol",
        "id": 3687,
        "nodeType": "ImportDirective",
        "scope": 3803,
        "sourceUnit": 3893,
        "src": "88:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/Address.sol",
        "file": "../lib/Address.sol",
        "id": 3688,
        "nodeType": "ImportDirective",
        "scope": 3803,
        "sourceUnit": 2291,
        "src": "112:28:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3690,
              "name": "Proxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4120,
              "src": "520:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Proxy_$4120",
                "typeString": "contract Proxy"
              }
            },
            "id": 3691,
            "nodeType": "InheritanceSpecifier",
            "src": "520:5:11"
          }
        ],
        "contractDependencies": [
          4120
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3689,
          "nodeType": "StructuredDocumentation",
          "src": "142:353:11",
          "text": " @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n conflict with the storage layout of the implementation behind the proxy.\n _Available since v3.4._"
        },
        "fullyImplemented": true,
        "id": 3802,
        "linearizedBaseContracts": [
          3802,
          4120
        ],
        "name": "BeaconProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "documentation": {
              "id": 3692,
              "nodeType": "StructuredDocumentation",
              "src": "532:232:11",
              "text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
            },
            "id": 3695,
            "mutability": "constant",
            "name": "_BEACON_SLOT",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3802,
            "src": "769:106:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3693,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "769:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
              "id": 3694,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "809:66:11",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
                "typeString": "int_const 7415...(69 digits omitted)...4704"
              },
              "value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 3724,
              "nodeType": "Block",
              "src": "1374:130:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 3716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3704,
                          "name": "_BEACON_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3695,
                          "src": "1391:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "656970313936372e70726f78792e626561636f6e",
                                        "id": 3710,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1433:22:11",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        },
                                        "value": "eip1967.proxy.beacon"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d51",
                                          "typeString": "literal_string \"eip1967.proxy.beacon\""
                                        }
                                      ],
                                      "id": 3709,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "1423:9:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 3711,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1423:33:11",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 3708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1415:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 3707,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1415:7:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 3712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1415:42:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 3713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1460:1:11",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1415:46:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1407:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 3705,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1407:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1407:55:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1391:71:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3703,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1384:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:79:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3718,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:79:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3720,
                        "name": "beacon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3698,
                        "src": "1484:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3721,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3700,
                        "src": "1492:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3719,
                      "name": "_setBeacon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3801,
                      "src": "1473:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 3722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1473:24:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3723,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:24:11"
                }
              ]
            },
            "documentation": {
              "id": 3696,
              "nodeType": "StructuredDocumentation",
              "src": "882:425:11",
              "text": " @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}."
            },
            "id": 3725,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3698,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3725,
                  "src": "1324:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1324:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3700,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3725,
                  "src": "1340:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3699,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1340:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1323:35:11"
            },
            "returnParameters": {
              "id": 3702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1374:0:11"
            },
            "scope": 3802,
            "src": "1312:192:11",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3736,
              "nodeType": "Block",
              "src": "1640:163:11",
              "statements": [
                {
                  "assignments": [
                    3732
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3732,
                      "mutability": "mutable",
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3736,
                      "src": "1650:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3731,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1650:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3734,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3733,
                    "name": "_BEACON_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3695,
                    "src": "1665:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1650:27:11"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1752:45:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1766:21:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "1782:4:11"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "1776:5:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1776:11:11"
                        },
                        "variableNames": [
                          {
                            "name": "beacon",
                            "nodeType": "YulIdentifier",
                            "src": "1766:6:11"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3729,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1766:6:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3732,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1782:4:11",
                      "valueSize": 1
                    }
                  ],
                  "id": 3735,
                  "nodeType": "InlineAssembly",
                  "src": "1743:54:11"
                }
              ]
            },
            "documentation": {
              "id": 3726,
              "nodeType": "StructuredDocumentation",
              "src": "1510:59:11",
              "text": " @dev Returns the current beacon address."
            },
            "id": 3737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beacon",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1590:2:11"
            },
            "returnParameters": {
              "id": 3730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3729,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3737,
                  "src": "1624:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3728,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1624:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1623:16:11"
            },
            "scope": 3802,
            "src": "1574:229:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              4085
            ],
            "body": {
              "id": 3751,
              "nodeType": "Block",
              "src": "1982:59:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3745,
                              "name": "_beacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3737,
                              "src": "2007:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 3746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2007:9:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3744,
                          "name": "IBeacon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3892,
                          "src": "1999:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBeacon_$3892_$",
                            "typeString": "type(contract IBeacon)"
                          }
                        },
                        "id": 3747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1999:18:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBeacon_$3892",
                          "typeString": "contract IBeacon"
                        }
                      },
                      "id": 3748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "implementation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3891,
                      "src": "1999:33:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 3749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1999:35:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3743,
                  "id": 3750,
                  "nodeType": "Return",
                  "src": "1992:42:11"
                }
              ]
            },
            "documentation": {
              "id": 3738,
              "nodeType": "StructuredDocumentation",
              "src": "1809:92:11",
              "text": " @dev Returns the current implementation address of the associated beacon."
            },
            "id": 3752,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3740,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1955:8:11"
            },
            "parameters": {
              "id": 3739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1930:2:11"
            },
            "returnParameters": {
              "id": 3743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3742,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3752,
                  "src": "1973:7:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1973:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1972:9:11"
            },
            "scope": 3802,
            "src": "1906:135:11",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3800,
              "nodeType": "Block",
              "src": "2448:590:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3763,
                            "name": "beacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3755,
                            "src": "2498:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3761,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2290,
                            "src": "2479:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$2290_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 3762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2014,
                          "src": "2479:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2479:26:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426561636f6e50726f78793a20626561636f6e206973206e6f74206120636f6e7472616374",
                        "id": 3765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2519:39:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53daaee6c8f15e50eac8695a66c34c0f6ccc33039991062daa2b1d74b5bd10c9",
                          "typeString": "literal_string \"BeaconProxy: beacon is not a contract\""
                        },
                        "value": "BeaconProxy: beacon is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53daaee6c8f15e50eac8695a66c34c0f6ccc33039991062daa2b1d74b5bd10c9",
                          "typeString": "literal_string \"BeaconProxy: beacon is not a contract\""
                        }
                      ],
                      "id": 3760,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2458:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2458:110:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3767,
                  "nodeType": "ExpressionStatement",
                  "src": "2458:110:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 3772,
                                    "name": "beacon",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3755,
                                    "src": "2626:6:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3771,
                                  "name": "IBeacon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3892,
                                  "src": "2618:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IBeacon_$3892_$",
                                    "typeString": "type(contract IBeacon)"
                                  }
                                },
                                "id": 3773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2618:15:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IBeacon_$3892",
                                  "typeString": "contract IBeacon"
                                }
                              },
                              "id": 3774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "implementation",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3891,
                              "src": "2618:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 3775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2618:32:11",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3769,
                            "name": "Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2290,
                            "src": "2599:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Address_$2290_$",
                              "typeString": "type(library Address)"
                            }
                          },
                          "id": 3770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2014,
                          "src": "2599:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 3776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2599:52:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "426561636f6e50726f78793a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
                        "id": 3777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2665:54:11",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff1f719f4da241d3b1e9f94c58b47fc2f722d5e8ebf2cdf3bf4ddc03bf3fd226",
                          "typeString": "literal_string \"BeaconProxy: beacon implementation is not a contract\""
                        },
                        "value": "BeaconProxy: beacon implementation is not a contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff1f719f4da241d3b1e9f94c58b47fc2f722d5e8ebf2cdf3bf4ddc03bf3fd226",
                          "typeString": "literal_string \"BeaconProxy: beacon implementation is not a contract\""
                        }
                      ],
                      "id": 3768,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2578:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2578:151:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3779,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:151:11"
                },
                {
                  "assignments": [
                    3781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3781,
                      "mutability": "mutable",
                      "name": "slot",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 3800,
                      "src": "2739:12:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 3780,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2739:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3783,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 3782,
                    "name": "_BEACON_SLOT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3695,
                    "src": "2754:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2739:27:11"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "2842:44:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "slot",
                              "nodeType": "YulIdentifier",
                              "src": "2863:4:11"
                            },
                            {
                              "name": "beacon",
                              "nodeType": "YulIdentifier",
                              "src": "2869:6:11"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "2856:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2856:20:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2856:20:11"
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 3755,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2869:6:11",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3781,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2863:4:11",
                      "valueSize": 1
                    }
                  ],
                  "id": 3784,
                  "nodeType": "InlineAssembly",
                  "src": "2833:53:11"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3785,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3757,
                        "src": "2900:4:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 3786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2900:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2914:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2900:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3799,
                  "nodeType": "IfStatement",
                  "src": "2896:136:11",
                  "trueBody": {
                    "id": 3798,
                    "nodeType": "Block",
                    "src": "2917:115:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 3792,
                                "name": "_implementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  3752
                                ],
                                "referencedDeclaration": 3752,
                                "src": "2960:15:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 3793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2960:17:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 3794,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3757,
                              "src": "2979:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "426561636f6e50726f78793a2066756e6374696f6e2063616c6c206661696c6564",
                              "id": 3795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2985:35:11",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4b9118f6e611fdd8fc95671ccbd662d4523f4260d53b96e250349693c7d23726",
                                "typeString": "literal_string \"BeaconProxy: function call failed\""
                              },
                              "value": "BeaconProxy: function call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4b9118f6e611fdd8fc95671ccbd662d4523f4260d53b96e250349693c7d23726",
                                "typeString": "literal_string \"BeaconProxy: function call failed\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 3789,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2290,
                              "src": "2931:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$2290_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 3791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "functionDelegateCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2259,
                            "src": "2931:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                            }
                          },
                          "id": 3796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2931:90:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 3797,
                        "nodeType": "ExpressionStatement",
                        "src": "2931:90:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3753,
              "nodeType": "StructuredDocumentation",
              "src": "2047:324:11",
              "text": " @dev Changes the proxy to use a new beacon.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n Requirements:\n - `beacon` must be a contract.\n - The implementation returned by `beacon` must be a contract."
            },
            "id": 3801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBeacon",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3755,
                  "mutability": "mutable",
                  "name": "beacon",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3801,
                  "src": "2396:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2396:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3757,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3801,
                  "src": "2412:17:11",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3756,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2412:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2395:35:11"
            },
            "returnParameters": {
              "id": 3759,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2448:0:11"
            },
            "scope": 3802,
            "src": "2376:662:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 3803,
        "src": "496:2544:11"
      }
    ],
    "src": "33:3008:11"
  },
  "bytecode": "60806040526040516108463803806108468339818101604052604081101561002657600080fd5b81516020830180516040519294929383019291908464010000000082111561004d57600080fd5b90830190602082018581111561006257600080fd5b825164010000000081118282018810171561007c57600080fd5b82525081516020918201929091019080838360005b838110156100a9578181015183820152602001610091565b50505050905090810190601f1680156100d65780820380516001836020036101000a031916815260200191505b50604052506100e3915050565b6100ed82826100f4565b505061047f565b6101078261024960201b6100311760201c565b6101425760405162461bcd60e51b81526004018080602001828103825260258152602001806107c76025913960400191505060405180910390fd5b6101ba826001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017e57600080fd5b505afa158015610192573d6000803e3d6000fd5b505050506040513d60208110156101a857600080fd5b5051610249602090811b61003117901c565b6101f55760405162461bcd60e51b81526004018080602001828103825260348152602001806108126034913960400191505060405180910390fd5b6000805160206107868339815191528281558151156102445761024261021961024f565b836040518060600160405280602181526020016107a6602191396102c260201b6100371760201c565b505b505050565b3b151590565b60006102596103c8565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561029157600080fd5b505afa1580156102a5573d6000803e3d6000fd5b505050506040513d60208110156102bb57600080fd5b5051905090565b60606102cd84610249565b6103085760405162461bcd60e51b81526004018080602001828103825260268152602001806107ec6026913960400191505060405180910390fd5b60006060856001600160a01b0316856040518082805190602001908083835b602083106103465780518252601f199092019160209182019101610327565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d80600081146103a6576040519150601f19603f3d011682016040523d82523d6000602084013e6103ab565b606091505b5090925090506103bc8282866103db565b925050505b9392505050565b6000805160206107868339815191525490565b606083156103ea5750816103c1565b8251156103fa5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561044457818101518382015260200161042c565b50505050905090810190601f1680156104715780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6102f88061048e6000396000f3fe60806040523661001357610011610017565b005b6100115b61001f61002f565b61002f61002a61013c565b6101af565b565b3b151590565b606061004284610031565b61007d5760405162461bcd60e51b815260040180806020018281038252602681526020018061029d6026913960400191505060405180910390fd5b60006060856001600160a01b0316856040518082805190602001908083835b602083106100bb5780518252601f19909201916020918201910161009c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461011b576040519150601f19603f3d011682016040523d82523d6000602084013e610120565b606091505b50915091506101308282866101d3565b925050505b9392505050565b6000610146610277565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017e57600080fd5b505afa158015610192573d6000803e3d6000fd5b505050506040513d60208110156101a857600080fd5b5051905090565b3660008037600080366000845af43d6000803e8080156101ce573d6000f35b3d6000fd5b606083156101e2575081610135565b8251156101f25782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561023c578181015183820152602001610224565b50505050905090810190601f1680156102695780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50549056fe416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374a26469706673582212202b8e8633d4c8259838fe6ef2bf4ca1d53fafb2b2a22f42427e522d0b0b6aa50d64736f6c634300060c0033a3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50426561636f6e50726f78793a2066756e6374696f6e2063616c6c206661696c6564426561636f6e50726f78793a20626561636f6e206973206e6f74206120636f6e7472616374416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374426561636f6e50726f78793a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "BeaconProxy",
  "coverageMap": {
    "branches": {
      "11": {},
      "13": {},
      "16": {},
      "3": {
        "Address._verifyCallResult": {
          "11": [
            7234,
            7241,
            false
          ],
          "12": [
            7375,
            7396,
            false
          ]
        },
        "Address.functionDelegateCall": {
          "10": [
            6811,
            6829,
            true
          ]
        }
      }
    },
    "statements": {
      "11": {
        "BeaconProxy._implementation": {
          "7": [
            1992,
            2034
          ]
        }
      },
      "13": {},
      "16": {
        "Proxy.<fallback>": {
          "1": [
            2619,
            2630
          ]
        },
        "Proxy.<receive>": {
          "0": [
            2843,
            2854
          ]
        },
        "Proxy._fallback": {
          "2": [
            2313,
            2330
          ],
          "3": [
            2340,
            2368
          ]
        }
      },
      "3": {
        "Address._verifyCallResult": {
          "8": [
            7257,
            7274
          ],
          "9": [
            7765,
            7785
          ]
        },
        "Address.functionDelegateCall": {
          "5": [
            6803,
            6872
          ],
          "6": [
            7019,
            7078
          ]
        },
        "Address.isContract": {
          "4": [
            1117,
            1132
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "IBeacon",
    "Proxy"
  ],
  "deployedBytecode": "60806040523661001357610011610017565b005b6100115b61001f61002f565b61002f61002a61013c565b6101af565b565b3b151590565b606061004284610031565b61007d5760405162461bcd60e51b815260040180806020018281038252602681526020018061029d6026913960400191505060405180910390fd5b60006060856001600160a01b0316856040518082805190602001908083835b602083106100bb5780518252601f19909201916020918201910161009c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d806000811461011b576040519150601f19603f3d011682016040523d82523d6000602084013e610120565b606091505b50915091506101308282866101d3565b925050505b9392505050565b6000610146610277565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561017e57600080fd5b505afa158015610192573d6000803e3d6000fd5b505050506040513d60208110156101a857600080fd5b5051905090565b3660008037600080366000845af43d6000803e8080156101ce573d6000f35b3d6000fd5b606083156101e2575081610135565b8251156101f25782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561023c578181015183820152602001610224565b50505050905090810190601f1680156102695780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50549056fe416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374a26469706673582212202b8e8633d4c8259838fe6ef2bf4ca1d53fafb2b2a22f42427e522d0b0b6aa50d64736f6c634300060c0033",
  "deployedSourceMap": "496:2544:11:-:0;;;;;;2843:11:16;:9;:11::i;:::-;496:2544:11;;2619:11:16;2265:110;2313:17;:15;:17::i;:::-;2340:28;2350:17;:15;:17::i;:::-;2340:9;:28::i;:::-;2265:110::o;726:413:3:-;1086:20;1124:8;;;726:413::o;6668:417::-;6779:12;6811:18;6822:6;6811:10;:18::i;:::-;6803:69;;;;-1:-1:-1;;;6803:69:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6943:12;6957:23;6984:6;-1:-1:-1;;;;;6984:19:3;7004:4;6984:25;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6984:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6942:67;;;;7026:52;7044:7;7053:10;7065:12;7026:17;:52::i;:::-;7019:59;;;;6668:417;;;;;;:::o;1906:135:11:-;1973:7;2007:9;:7;:9::i;:::-;-1:-1:-1;;;;;1999:33:11;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1999:35:11;;-1:-1:-1;1906:135:11;:::o;891:895:16:-;1285:14;1282:1;1279;1266:34;1499:1;1496;1480:14;1477:1;1461:14;1454:5;1441:60;1575:16;1572:1;1569;1554:38;1613:6;1680:38;;;;1751:16;1748:1;1741:27;1680:38;1699:16;1696:1;1689:27;7091:725:3;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:3;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1574:229:11;809:66;1776:11;;1752:45::o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}."
      }
    },
    "stateVariables": {
      "_BEACON_SLOT": {
        "details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
      }
    },
    "version": 1
  },
  "offset": [
    496,
    3040
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x1F PUSH2 0x2F JUMP JUMPDEST PUSH2 0x2F PUSH2 0x2A PUSH2 0x13C JUMP JUMPDEST PUSH2 0x1AF JUMP JUMPDEST JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x42 DUP5 PUSH2 0x31 JUMP JUMPDEST PUSH2 0x7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xBB JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x9C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x120 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x130 DUP3 DUP3 DUP7 PUSH2 0x1D3 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x192 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x1CE JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1E2 JUMPI POP DUP2 PUSH2 0x135 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1F2 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x224 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x269 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD SWAP1 JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH5 0x656C656761 PUSH21 0x652063616C6C20746F206E6F6E2D636F6E74726163 PUSH21 0xA26469706673582212202B8E8633D4C8259838FE6E CALLCODE 0xBF 0x4C LOG1 0xD5 EXTCODEHASH 0xAF 0xB2 0xB2 LOG2 0x2F TIMESTAMP TIMESTAMP PUSH31 0x522D0B0B6AA50D64736F6C634300060C003300000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        496,
        3040
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        496,
        3040
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        496,
        3040
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "5": {
      "fn": null,
      "offset": [
        496,
        3040
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "6": {
      "fn": null,
      "offset": [
        496,
        3040
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x13"
    },
    "9": {
      "fn": null,
      "offset": [
        496,
        3040
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "10": {
      "fn": "Proxy.<receive>",
      "offset": [
        2843,
        2854
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 0,
      "value": "0x11"
    },
    "13": {
      "fn": "Proxy.<receive>",
      "offset": [
        2843,
        2852
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x17"
    },
    "16": {
      "fn": "Proxy.<receive>",
      "jump": "i",
      "offset": [
        2843,
        2854
      ],
      "op": "JUMP",
      "path": "16"
    },
    "17": {
      "fn": "Proxy.<receive>",
      "offset": [
        2843,
        2854
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "18": {
      "offset": [
        496,
        3040
      ],
      "op": "STOP",
      "path": "11"
    },
    "19": {
      "fn": "Proxy.<receive>",
      "offset": [
        496,
        3040
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "20": {
      "fn": "Proxy.<fallback>",
      "offset": [
        2619,
        2630
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 1,
      "value": "0x11"
    },
    "23": {
      "fn": "Proxy._fallback",
      "offset": [
        2265,
        2375
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "24": {
      "fn": "Proxy._fallback",
      "offset": [
        2313,
        2330
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 2,
      "value": "0x1F"
    },
    "27": {
      "fn": "Proxy._fallback",
      "offset": [
        2313,
        2328
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F"
    },
    "30": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2313,
        2330
      ],
      "op": "JUMP",
      "path": "16"
    },
    "31": {
      "fn": "Proxy._fallback",
      "offset": [
        2313,
        2330
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "32": {
      "fn": "Proxy._fallback",
      "offset": [
        2340,
        2368
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 3,
      "value": "0x2F"
    },
    "35": {
      "fn": "Proxy._fallback",
      "offset": [
        2350,
        2367
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A"
    },
    "38": {
      "fn": "Proxy._fallback",
      "offset": [
        2350,
        2365
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13C"
    },
    "41": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2350,
        2367
      ],
      "op": "JUMP",
      "path": "16"
    },
    "42": {
      "fn": "Proxy._fallback",
      "offset": [
        2350,
        2367
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "43": {
      "fn": "Proxy._fallback",
      "offset": [
        2340,
        2349
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1AF"
    },
    "46": {
      "fn": "Proxy._fallback",
      "jump": "i",
      "offset": [
        2340,
        2368
      ],
      "op": "JUMP",
      "path": "16"
    },
    "47": {
      "fn": "Proxy._fallback",
      "offset": [
        2340,
        2368
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "48": {
      "fn": "Proxy._fallback",
      "jump": "o",
      "offset": [
        2265,
        2375
      ],
      "op": "JUMP",
      "path": "16"
    },
    "49": {
      "fn": "Address.isContract",
      "offset": [
        726,
        1139
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "50": {
      "fn": "Address.isContract",
      "offset": [
        1086,
        1106
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "51": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "3",
      "statement": 4
    },
    "52": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "53": {
      "fn": "Address.isContract",
      "offset": [
        1124,
        1132
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "54": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        726,
        1139
      ],
      "op": "JUMP",
      "path": "3"
    },
    "55": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6668,
        7085
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "56": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6779,
        6791
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "58": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6811,
        6829
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 5,
      "value": "0x42"
    },
    "61": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6822,
        6828
      ],
      "op": "DUP5",
      "path": "3"
    },
    "62": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6811,
        6821
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31"
    },
    "65": {
      "fn": "Address.functionDelegateCall",
      "jump": "i",
      "offset": [
        6811,
        6829
      ],
      "op": "JUMP",
      "path": "3"
    },
    "66": {
      "branch": 10,
      "fn": "Address.functionDelegateCall",
      "offset": [
        6811,
        6829
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "67": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D"
    },
    "70": {
      "branch": 10,
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "71": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "73": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "74": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "78": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "80": {
      "op": "SHL"
    },
    "81": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP2",
      "path": "3"
    },
    "82": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "83": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "85": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "ADD",
      "path": "3"
    },
    "86": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP1",
      "path": "3"
    },
    "87": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "90": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "ADD",
      "path": "3"
    },
    "91": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP3",
      "path": "3"
    },
    "92": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP2",
      "path": "3"
    },
    "93": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "SUB",
      "path": "3"
    },
    "94": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP3",
      "path": "3"
    },
    "95": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "96": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "98": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP2",
      "path": "3"
    },
    "99": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "100": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "102": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "ADD",
      "path": "3"
    },
    "103": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP1",
      "path": "3"
    },
    "104": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29D"
    },
    "107": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x26"
    },
    "109": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "110": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "CODECOPY",
      "path": "3"
    },
    "111": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "113": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "ADD",
      "path": "3"
    },
    "114": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "115": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "POP",
      "path": "3"
    },
    "116": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "POP",
      "path": "3"
    },
    "117": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "119": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "120": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "DUP1",
      "path": "3"
    },
    "121": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "122": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "SUB",
      "path": "3"
    },
    "123": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "124": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "REVERT",
      "path": "3"
    },
    "125": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6803,
        6872
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "126": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6943,
        6955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "128": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6957,
        6980
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "130": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        6990
      ],
      "op": "DUP6",
      "path": "3"
    },
    "131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "137": {
      "op": "SHL"
    },
    "138": {
      "op": "SUB"
    },
    "139": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7003
      ],
      "op": "AND",
      "path": "3"
    },
    "140": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7004,
        7008
      ],
      "op": "DUP6",
      "path": "3"
    },
    "141": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "143": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "144": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "3"
    },
    "145": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "3"
    },
    "146": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "3"
    },
    "147": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "148": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "149": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "151": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "3"
    },
    "152": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "153": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "3"
    },
    "154": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP4",
      "path": "3"
    },
    "155": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP4",
      "path": "3"
    },
    "156": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "157": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "159": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP4",
      "path": "3"
    },
    "160": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "LT",
      "path": "3"
    },
    "161": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBB"
    },
    "164": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "165": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "3"
    },
    "166": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "167": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "3"
    },
    "168": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "171": {
      "op": "NOT"
    },
    "172": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "173": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "174": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "3"
    },
    "175": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "176": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "178": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "179": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "3"
    },
    "180": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "3"
    },
    "181": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "182": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "3"
    },
    "183": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C"
    },
    "186": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMP",
      "path": "3"
    },
    "187": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "188": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "190": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP4",
      "path": "3"
    },
    "191": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "193": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SUB",
      "path": "3"
    },
    "194": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "197": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "EXP",
      "path": "3"
    },
    "198": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SUB",
      "path": "3"
    },
    "199": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "3"
    },
    "200": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "NOT",
      "path": "3"
    },
    "201": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "3"
    },
    "202": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "203": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "AND",
      "path": "3"
    },
    "204": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP2",
      "path": "3"
    },
    "205": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP5",
      "path": "3"
    },
    "206": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "207": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "AND",
      "path": "3"
    },
    "208": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "3"
    },
    "209": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "3"
    },
    "210": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "OR",
      "path": "3"
    },
    "211": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP6",
      "path": "3"
    },
    "212": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "213": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "214": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "215": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "216": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "217": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "218": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "219": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "220": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "221": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "3"
    },
    "222": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "223": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "224": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "225": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "227": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "229": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "230": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "3"
    },
    "231": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP4",
      "path": "3"
    },
    "232": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SUB",
      "path": "3"
    },
    "233": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP2",
      "path": "3"
    },
    "234": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP6",
      "path": "3"
    },
    "235": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "GAS",
      "path": "3"
    },
    "236": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DELEGATECALL",
      "path": "3"
    },
    "237": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "238": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "239": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "240": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "241": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP1",
      "path": "3"
    },
    "242": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "244": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP2",
      "path": "3"
    },
    "245": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "EQ",
      "path": "3"
    },
    "246": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11B"
    },
    "249": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "250": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "252": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "253": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "254": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "255": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "257": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "NOT",
      "path": "3"
    },
    "258": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "260": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "261": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "3"
    },
    "262": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "AND",
      "path": "3"
    },
    "263": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "3"
    },
    "264": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "3"
    },
    "265": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "267": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "268": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "269": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP3",
      "path": "3"
    },
    "270": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "271": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "272": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "274": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "276": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "DUP5",
      "path": "3"
    },
    "277": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "ADD",
      "path": "3"
    },
    "278": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "279": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120"
    },
    "282": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMP",
      "path": "3"
    },
    "283": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "284": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "286": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "287": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "288": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "289": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6984,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "290": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6942,
        7009
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "291": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6942,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "292": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6942,
        7009
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "293": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6942,
        7009
      ],
      "op": "POP",
      "path": "3"
    },
    "294": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7026,
        7078
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0x130"
    },
    "297": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7044,
        7051
      ],
      "op": "DUP3",
      "path": "3"
    },
    "298": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7053,
        7063
      ],
      "op": "DUP3",
      "path": "3"
    },
    "299": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7065,
        7077
      ],
      "op": "DUP7",
      "path": "3"
    },
    "300": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7026,
        7043
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D3"
    },
    "303": {
      "fn": "Address.functionDelegateCall",
      "jump": "i",
      "offset": [
        7026,
        7078
      ],
      "op": "JUMP",
      "path": "3"
    },
    "304": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7026,
        7078
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "305": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7019,
        7078
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "306": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7019,
        7078
      ],
      "op": "POP",
      "path": "3"
    },
    "307": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7019,
        7078
      ],
      "op": "POP",
      "path": "3"
    },
    "308": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        7019,
        7078
      ],
      "op": "POP",
      "path": "3"
    },
    "309": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6668,
        7085
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "310": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6668,
        7085
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "311": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6668,
        7085
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "312": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6668,
        7085
      ],
      "op": "POP",
      "path": "3"
    },
    "313": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6668,
        7085
      ],
      "op": "POP",
      "path": "3"
    },
    "314": {
      "fn": "Address.functionDelegateCall",
      "offset": [
        6668,
        7085
      ],
      "op": "POP",
      "path": "3"
    },
    "315": {
      "fn": "Address.functionDelegateCall",
      "jump": "o",
      "offset": [
        6668,
        7085
      ],
      "op": "JUMP",
      "path": "3"
    },
    "316": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1906,
        2041
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "317": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1973,
        1980
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "319": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        2007,
        2016
      ],
      "op": "PUSH2",
      "path": "11",
      "statement": 7,
      "value": "0x146"
    },
    "322": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        2007,
        2014
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x277"
    },
    "325": {
      "fn": "BeaconProxy._implementation",
      "jump": "i",
      "offset": [
        2007,
        2016
      ],
      "op": "JUMP",
      "path": "11"
    },
    "326": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        2007,
        2016
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "331": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "333": {
      "op": "SHL"
    },
    "334": {
      "op": "SUB"
    },
    "335": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2032
      ],
      "op": "AND",
      "path": "11"
    },
    "336": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2032
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0x5C60DA1B"
    },
    "341": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "343": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "344": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP2",
      "path": "11"
    },
    "345": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH4",
      "path": "11",
      "value": "0xFFFFFFFF"
    },
    "350": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "AND",
      "path": "11"
    },
    "351": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xE0"
    },
    "353": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "SHL",
      "path": "11"
    },
    "354": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP2",
      "path": "11"
    },
    "355": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "356": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "358": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "ADD",
      "path": "11"
    },
    "359": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "361": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "363": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "364": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP1",
      "path": "11"
    },
    "365": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP4",
      "path": "11"
    },
    "366": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "SUB",
      "path": "11"
    },
    "367": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP2",
      "path": "11"
    },
    "368": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP7",
      "path": "11"
    },
    "369": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP1",
      "path": "11"
    },
    "370": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "EXTCODESIZE",
      "path": "11"
    },
    "371": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "372": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP1",
      "path": "11"
    },
    "373": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "374": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x17E"
    },
    "377": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "378": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "380": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP1",
      "path": "11"
    },
    "381": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "REVERT",
      "path": "11"
    },
    "382": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "383": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "POP",
      "path": "11"
    },
    "384": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "GAS",
      "path": "11"
    },
    "385": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "STATICCALL",
      "path": "11"
    },
    "386": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "387": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP1",
      "path": "11"
    },
    "388": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "389": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x192"
    },
    "392": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "393": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "394": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "396": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP1",
      "path": "11"
    },
    "397": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "RETURNDATACOPY",
      "path": "11"
    },
    "398": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "399": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "401": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "REVERT",
      "path": "11"
    },
    "402": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "403": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "POP",
      "path": "11"
    },
    "404": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "POP",
      "path": "11"
    },
    "405": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "POP",
      "path": "11"
    },
    "406": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "POP",
      "path": "11"
    },
    "407": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "409": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "410": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "RETURNDATASIZE",
      "path": "11"
    },
    "411": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "413": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP2",
      "path": "11"
    },
    "414": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "LT",
      "path": "11"
    },
    "415": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "416": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1A8"
    },
    "419": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "420": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "422": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "DUP1",
      "path": "11"
    },
    "423": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "REVERT",
      "path": "11"
    },
    "424": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "425": {
      "op": "POP"
    },
    "426": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "427": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1999,
        2034
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "428": {
      "op": "POP"
    },
    "429": {
      "fn": "BeaconProxy._implementation",
      "offset": [
        1906,
        2041
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "430": {
      "fn": "BeaconProxy._implementation",
      "jump": "o",
      "offset": [
        1906,
        2041
      ],
      "op": "JUMP",
      "path": "11"
    },
    "431": {
      "fn": "Proxy._delegate",
      "offset": [
        891,
        1786
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "432": {
      "fn": "Proxy._delegate",
      "offset": [
        1285,
        1299
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "433": {
      "fn": "Proxy._delegate",
      "offset": [
        1282,
        1283
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "435": {
      "fn": "Proxy._delegate",
      "offset": [
        1279,
        1280
      ],
      "op": "DUP1",
      "path": "16"
    },
    "436": {
      "fn": "Proxy._delegate",
      "offset": [
        1266,
        1300
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "437": {
      "fn": "Proxy._delegate",
      "offset": [
        1499,
        1500
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "439": {
      "fn": "Proxy._delegate",
      "offset": [
        1496,
        1497
      ],
      "op": "DUP1",
      "path": "16"
    },
    "440": {
      "fn": "Proxy._delegate",
      "offset": [
        1480,
        1494
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "441": {
      "fn": "Proxy._delegate",
      "offset": [
        1477,
        1478
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "443": {
      "fn": "Proxy._delegate",
      "offset": [
        1461,
        1475
      ],
      "op": "DUP5",
      "path": "16"
    },
    "444": {
      "fn": "Proxy._delegate",
      "offset": [
        1454,
        1459
      ],
      "op": "GAS",
      "path": "16"
    },
    "445": {
      "fn": "Proxy._delegate",
      "offset": [
        1441,
        1501
      ],
      "op": "DELEGATECALL",
      "path": "16"
    },
    "446": {
      "fn": "Proxy._delegate",
      "offset": [
        1575,
        1591
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "447": {
      "fn": "Proxy._delegate",
      "offset": [
        1572,
        1573
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "449": {
      "fn": "Proxy._delegate",
      "offset": [
        1569,
        1570
      ],
      "op": "DUP1",
      "path": "16"
    },
    "450": {
      "fn": "Proxy._delegate",
      "offset": [
        1554,
        1592
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "451": {
      "fn": "Proxy._delegate",
      "offset": [
        1613,
        1619
      ],
      "op": "DUP1",
      "path": "16"
    },
    "452": {
      "fn": "Proxy._delegate",
      "offset": [
        1680,
        1718
      ],
      "op": "DUP1",
      "path": "16"
    },
    "453": {
      "fn": "Proxy._delegate",
      "offset": [
        1680,
        1718
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "454": {
      "fn": "Proxy._delegate",
      "offset": [
        1680,
        1718
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1CE"
    },
    "457": {
      "fn": "Proxy._delegate",
      "offset": [
        1680,
        1718
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "458": {
      "fn": "Proxy._delegate",
      "offset": [
        1751,
        1767
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "459": {
      "fn": "Proxy._delegate",
      "offset": [
        1748,
        1749
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "461": {
      "fn": "Proxy._delegate",
      "offset": [
        1741,
        1768
      ],
      "op": "RETURN",
      "path": "16"
    },
    "462": {
      "fn": "Proxy._delegate",
      "offset": [
        1680,
        1718
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "463": {
      "fn": "Proxy._delegate",
      "offset": [
        1699,
        1715
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "464": {
      "fn": "Proxy._delegate",
      "offset": [
        1696,
        1697
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "466": {
      "fn": "Proxy._delegate",
      "offset": [
        1689,
        1716
      ],
      "op": "REVERT",
      "path": "16"
    },
    "467": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7091,
        7816
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "468": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7206,
        7218
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "470": {
      "branch": 11,
      "fn": "Address._verifyCallResult",
      "offset": [
        7234,
        7241
      ],
      "op": "DUP4",
      "path": "3"
    },
    "471": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "472": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E2"
    },
    "475": {
      "branch": 11,
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "476": {
      "op": "POP"
    },
    "477": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7264,
        7274
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 8
    },
    "478": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x135"
    },
    "481": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7257,
        7274
      ],
      "op": "JUMP",
      "path": "3"
    },
    "482": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7230,
        7810
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "483": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "DUP3",
      "path": "3"
    },
    "484": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7392
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "485": {
      "branch": 12,
      "fn": "Address._verifyCallResult",
      "offset": [
        7375,
        7396
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "486": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F2"
    },
    "489": {
      "branch": 12,
      "fn": "Address._verifyCallResult",
      "offset": [
        7371,
        7800
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "490": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7633,
        7643
      ],
      "op": "DUP3",
      "path": "3"
    },
    "491": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7627,
        7644
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "492": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7693,
        7708
      ],
      "op": "DUP1",
      "path": "3"
    },
    "493": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7680,
        7690
      ],
      "op": "DUP5",
      "path": "3"
    },
    "494": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7676,
        7678
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "496": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7672,
        7691
      ],
      "op": "ADD",
      "path": "3"
    },
    "497": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7665,
        7709
      ],
      "op": "REVERT",
      "path": "3"
    },
    "498": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7582,
        7727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "499": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7772,
        7784
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 9
    },
    "500": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "502": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "503": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "507": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "509": {
      "op": "SHL"
    },
    "510": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "511": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "512": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "514": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "3"
    },
    "515": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "516": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "517": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "519": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "3"
    },
    "520": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "3"
    },
    "521": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "522": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "3"
    },
    "523": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "3"
    },
    "524": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "525": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "3"
    },
    "526": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "527": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "528": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "529": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "530": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "531": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "533": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "3"
    },
    "534": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "535": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "3"
    },
    "536": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "537": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "538": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "539": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "541": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "3"
    },
    "542": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "543": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "544": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "3"
    },
    "545": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "3"
    },
    "546": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "548": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "549": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "3"
    },
    "550": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "551": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "LT",
      "path": "3"
    },
    "552": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "553": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23C"
    },
    "556": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "557": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "558": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "559": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "3"
    },
    "560": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "561": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "3"
    },
    "562": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "3"
    },
    "563": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "3"
    },
    "564": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "565": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "567": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "3"
    },
    "568": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x224"
    },
    "571": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMP",
      "path": "3"
    },
    "572": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "573": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "3"
    },
    "574": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "3"
    },
    "575": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "3"
    },
    "576": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "3"
    },
    "577": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "578": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "3"
    },
    "579": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "580": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "581": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "3"
    },
    "582": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "583": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "585": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "AND",
      "path": "3"
    },
    "586": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "587": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "588": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x269"
    },
    "591": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "592": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "593": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP3",
      "path": "3"
    },
    "594": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "3"
    },
    "595": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "596": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "597": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "599": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP4",
      "path": "3"
    },
    "600": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "602": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "3"
    },
    "603": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "606": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "EXP",
      "path": "3"
    },
    "607": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "3"
    },
    "608": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "NOT",
      "path": "3"
    },
    "609": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "AND",
      "path": "3"
    },
    "610": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "611": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "612": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "614": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "ADD",
      "path": "3"
    },
    "615": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "616": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "3"
    },
    "617": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "618": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "3"
    },
    "619": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "620": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "3"
    },
    "621": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "3"
    },
    "622": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "POP",
      "path": "3"
    },
    "623": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "625": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "626": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "627": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "628": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SUB",
      "path": "3"
    },
    "629": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "630": {
      "fn": "Address._verifyCallResult",
      "offset": [
        7765,
        7785
      ],
      "op": "REVERT",
      "path": "3"
    },
    "631": {
      "fn": "BeaconProxy._beacon",
      "offset": [
        1574,
        1803
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "632": {
      "offset": [
        809,
        875
      ],
      "op": "PUSH32",
      "path": "11",
      "value": "0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
    },
    "665": {
      "fn": "BeaconProxy._beacon",
      "offset": [
        1776,
        1787
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "666": {
      "fn": "BeaconProxy._beacon",
      "offset": [
        1776,
        1787
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "667": {
      "fn": "BeaconProxy._beacon",
      "jump": "o",
      "offset": [
        1752,
        1797
      ],
      "op": "JUMP",
      "path": "11"
    }
  },
  "sha1": "fbd7621f9c736f9f05db2011118ee8c432998dcd",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./Proxy.sol\";\nimport \"./IBeacon.sol\";\nimport \"../lib/Address.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from a {UpgradeableBeacon}.\n *\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n * conflict with the storage layout of the implementation behind the proxy.\n *\n * _Available since v3.4._\n */\ncontract BeaconProxy is Proxy {\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 private constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     */\n    constructor(address beacon, bytes memory data) public payable {\n        assert(_BEACON_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.beacon\")) - 1));\n        _setBeacon(beacon, data);\n    }\n\n    /**\n     * @dev Returns the current beacon address.\n     */\n    function _beacon() internal view virtual returns (address beacon) {\n        bytes32 slot = _BEACON_SLOT;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            beacon := sload(slot)\n        }\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_beacon()).implementation();\n    }\n\n    /**\n     * @dev Changes the proxy to use a new beacon.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract.\n     * - The implementation returned by `beacon` must be a contract.\n     */\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\n        require(\n            Address.isContract(beacon),\n            \"BeaconProxy: beacon is not a contract\"\n        );\n        require(\n            Address.isContract(IBeacon(beacon).implementation()),\n            \"BeaconProxy: beacon implementation is not a contract\"\n        );\n        bytes32 slot = _BEACON_SLOT;\n\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            sstore(slot, beacon)\n        }\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(_implementation(), data, \"BeaconProxy: function call failed\");\n        }\n    }\n}\n",
  "sourceMap": "496:2544:11:-:0;;;1312:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1312:192:11;;;;;;;;;;-1:-1:-1;1312:192:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1312:192:11;;-1:-1:-1;1384:79:11;;-1:-1:-1;;1384:79:11;;1473:24;1484:6;1492:4;1473:10;:24::i;:::-;1312:192;;496:2544;;2376:662;2479:26;2498:6;2479:18;;;;;:26;;:::i;:::-;2458:110;;;;-1:-1:-1;;;2458:110:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2599:52;2626:6;-1:-1:-1;;;;;2618:30:11;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2618:32:11;2599:18;2618:32;2599:18;;;;;:52;;:::i;:::-;2578:151;;;;-1:-1:-1;;;2578:151:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2856:20:11;;;2900:11;;:15;2896:136;;2931:90;2960:17;:15;:17::i;:::-;2979:4;2931:90;;;;;;;;;;;;;;;;;:28;;;;;:90;;:::i;:::-;;2896:136;2376:662;;;:::o;726:413:3:-;1086:20;1124:8;;;726:413::o;1906:135:11:-;1973:7;2007:9;:7;:9::i;:::-;-1:-1:-1;;;;;1999:33:11;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1999:35:11;;-1:-1:-1;1906:135:11;:::o;6668:417:3:-;6779:12;6811:18;6822:6;6811:10;:18::i;:::-;6803:69;;;;-1:-1:-1;;;6803:69:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6943:12;6957:23;6984:6;-1:-1:-1;;;;;6984:19:3;7004:4;6984:25;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6984:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6942:67:3;;-1:-1:-1;6942:67:3;-1:-1:-1;7026:52:3;6942:67;;7065:12;7026:17;:52::i;:::-;7019:59;;;;6668:417;;;;;;:::o;1574:229:11:-;-1:-1:-1;;;;;;;;;;;1776:11:11;;1752:45::o;7091:725:3:-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:3;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;496:2544:11;;;;;;;",
  "sourcePath": "contracts/proxy/BeaconProxy.sol",
  "type": "contract"
}