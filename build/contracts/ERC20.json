{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/lib/SafeMath.sol",
    "3": "contracts/lib/Address.sol",
    "4": "contracts/lib/Context.sol",
    "5": "contracts/lib/ERC20.sol",
    "6": "contracts/lib/ERC20/IERC20.sol",
    "8": "contracts/lib/Ownable1.sol"
  },
  "ast": {
    "absolutePath": "contracts/lib/ERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        2841
      ]
    },
    "id": 2842,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2315,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:5"
      },
      {
        "absolutePath": "contracts/lib/Ownable1.sol",
        "file": "./Ownable1.sol",
        "id": 2316,
        "nodeType": "ImportDirective",
        "scope": 2842,
        "sourceUnit": 3270,
        "src": "59:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/Context.sol",
        "file": "./Context.sol",
        "id": 2317,
        "nodeType": "ImportDirective",
        "scope": 2842,
        "sourceUnit": 2314,
        "src": "85:23:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 2318,
        "nodeType": "ImportDirective",
        "scope": 2842,
        "sourceUnit": 3684,
        "src": "109:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/Address.sol",
        "file": "./Address.sol",
        "id": 2319,
        "nodeType": "ImportDirective",
        "scope": 2842,
        "sourceUnit": 2291,
        "src": "134:23:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/ERC20/IERC20.sol",
        "file": "./ERC20/IERC20.sol",
        "id": 2320,
        "nodeType": "ImportDirective",
        "scope": 2842,
        "sourceUnit": 2944,
        "src": "158:28:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2321,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2313,
              "src": "206:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$2313",
                "typeString": "contract Context"
              }
            },
            "id": 2322,
            "nodeType": "InheritanceSpecifier",
            "src": "206:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2323,
              "name": "Ownable1",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3269,
              "src": "215:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable1_$3269",
                "typeString": "contract Ownable1"
              }
            },
            "id": 2324,
            "nodeType": "InheritanceSpecifier",
            "src": "215:8:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2325,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2943,
              "src": "225:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$2943",
                "typeString": "contract IERC20"
              }
            },
            "id": 2326,
            "nodeType": "InheritanceSpecifier",
            "src": "225:6:5"
          }
        ],
        "contractDependencies": [
          2313,
          2943,
          3269
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2841,
        "linearizedBaseContracts": [
          2841,
          2943,
          3269,
          2313
        ],
        "name": "ERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2329,
            "libraryName": {
              "contractScope": null,
              "id": 2327,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3683,
              "src": "244:8:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3683",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "238:27:5",
            "typeName": {
              "id": 2328,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "257:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 2332,
            "libraryName": {
              "contractScope": null,
              "id": 2330,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2290,
              "src": "276:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$2290",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "270:26:5",
            "typeName": {
              "id": 2331,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "288:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 2336,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2841,
            "src": "302:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2335,
              "keyType": {
                "id": 2333,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "310:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "302:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2334,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "321:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2342,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2841,
            "src": "354:67:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 2341,
              "keyType": {
                "id": 2337,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "362:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "354:47:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 2340,
                "keyType": {
                  "id": 2338,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "381:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "373:27:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 2339,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "392:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2344,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2841,
            "src": "428:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2343,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "428:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2346,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2841,
            "src": "463:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2345,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "463:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2348,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2841,
            "src": "489:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2347,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "489:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2350,
            "mutability": "mutable",
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2841,
            "src": "517:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 2349,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "517:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2353,
              "nodeType": "Block",
              "src": "568:2:5",
              "statements": []
            },
            "documentation": null,
            "id": 2354,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:2:5"
            },
            "returnParameters": {
              "id": 2352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "568:0:5"
            },
            "scope": 2841,
            "src": "547:23:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2391,
              "nodeType": "Block",
              "src": "773:169:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2371,
                        "name": "ownerAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2365,
                        "src": "805:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2368,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "783:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC20_$2841",
                          "typeString": "contract super ERC20"
                        }
                      },
                      "id": 2370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initializeOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3185,
                      "src": "783:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "783:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2373,
                  "nodeType": "ExpressionStatement",
                  "src": "783:32:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2374,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2346,
                      "src": "826:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2375,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2357,
                      "src": "834:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "826:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2377,
                  "nodeType": "ExpressionStatement",
                  "src": "826:12:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2378,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2348,
                      "src": "848:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2379,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2359,
                      "src": "858:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "848:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2381,
                  "nodeType": "ExpressionStatement",
                  "src": "848:16:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2382,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2350,
                      "src": "874:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2383,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2361,
                      "src": "886:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "874:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 2385,
                  "nodeType": "ExpressionStatement",
                  "src": "874:20:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2387,
                        "name": "ownerAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2365,
                        "src": "910:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2388,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2363,
                        "src": "921:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2386,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2718,
                      "src": "904:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "904:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2390,
                  "nodeType": "ExpressionStatement",
                  "src": "904:31:5"
                }
              ]
            },
            "documentation": {
              "id": 2355,
              "nodeType": "StructuredDocumentation",
              "src": "576:58:5",
              "text": " @dev sets initials supply and the owner"
            },
            "id": 2392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initializeERC20",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2357,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2392,
                  "src": "664:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2356,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2359,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2392,
                  "src": "684:20:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2358,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "684:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2361,
                  "mutability": "mutable",
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2392,
                  "src": "706:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2360,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2363,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2392,
                  "src": "722:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2365,
                  "mutability": "mutable",
                  "name": "ownerAddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2392,
                  "src": "745:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "663:100:5"
            },
            "returnParameters": {
              "id": 2367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "773:0:5"
            },
            "scope": 2841,
            "src": "639:303:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2900
            ],
            "body": {
              "id": 2402,
              "nodeType": "Block",
              "src": "1077:31:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2399,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3194,
                      "src": "1094:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 2400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1094:7:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2398,
                  "id": 2401,
                  "nodeType": "Return",
                  "src": "1087:14:5"
                }
              ]
            },
            "documentation": {
              "id": 2393,
              "nodeType": "StructuredDocumentation",
              "src": "948:65:5",
              "text": " @dev Returns the address of the current owner."
            },
            "functionSelector": "893d20e8",
            "id": 2403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2395,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1045:8:5"
            },
            "parameters": {
              "id": 2394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1035:2:5"
            },
            "returnParameters": {
              "id": 2398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2397,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2403,
                  "src": "1068:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1067:9:5"
            },
            "scope": 2841,
            "src": "1018:90:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2894
            ],
            "body": {
              "id": 2412,
              "nodeType": "Block",
              "src": "1227:29:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2410,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2346,
                    "src": "1244:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2409,
                  "id": 2411,
                  "nodeType": "Return",
                  "src": "1237:12:5"
                }
              ]
            },
            "documentation": {
              "id": 2404,
              "nodeType": "StructuredDocumentation",
              "src": "1114:47:5",
              "text": " @dev Returns the token name."
            },
            "functionSelector": "06fdde03",
            "id": 2413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2406,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1189:8:5"
            },
            "parameters": {
              "id": 2405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:2:5"
            },
            "returnParameters": {
              "id": 2409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2408,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2413,
                  "src": "1212:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2407,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1211:15:5"
            },
            "scope": 2841,
            "src": "1166:90:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2906
            ],
            "body": {
              "id": 2422,
              "nodeType": "Block",
              "src": "1375:33:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2420,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2350,
                    "src": "1392:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 2419,
                  "id": 2421,
                  "nodeType": "Return",
                  "src": "1385:16:5"
                }
              ]
            },
            "documentation": {
              "id": 2414,
              "nodeType": "StructuredDocumentation",
              "src": "1262:51:5",
              "text": " @dev Returns the token decimals."
            },
            "functionSelector": "313ce567",
            "id": 2423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2416,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1345:8:5"
            },
            "parameters": {
              "id": 2415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1335:2:5"
            },
            "returnParameters": {
              "id": 2419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2418,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2423,
                  "src": "1368:5:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2417,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1367:7:5"
            },
            "scope": 2841,
            "src": "1318:90:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2912
            ],
            "body": {
              "id": 2432,
              "nodeType": "Block",
              "src": "1531:31:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2430,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2348,
                    "src": "1548:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2429,
                  "id": 2431,
                  "nodeType": "Return",
                  "src": "1541:14:5"
                }
              ]
            },
            "documentation": {
              "id": 2424,
              "nodeType": "StructuredDocumentation",
              "src": "1414:49:5",
              "text": " @dev Returns the token symbol."
            },
            "functionSelector": "95d89b41",
            "id": 2433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2426,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1493:8:5"
            },
            "parameters": {
              "id": 2425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1483:2:5"
            },
            "returnParameters": {
              "id": 2429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2428,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2433,
                  "src": "1516:13:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2427,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1515:15:5"
            },
            "scope": 2841,
            "src": "1468:94:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2850
            ],
            "body": {
              "id": 2442,
              "nodeType": "Block",
              "src": "1683:36:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2440,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2344,
                    "src": "1700:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2439,
                  "id": 2441,
                  "nodeType": "Return",
                  "src": "1693:19:5"
                }
              ]
            },
            "documentation": {
              "id": 2434,
              "nodeType": "StructuredDocumentation",
              "src": "1568:48:5",
              "text": " @dev See {BEP20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 2443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2436,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1651:8:5"
            },
            "parameters": {
              "id": 2435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1641:2:5"
            },
            "returnParameters": {
              "id": 2439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2438,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2443,
                  "src": "1674:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1673:9:5"
            },
            "scope": 2841,
            "src": "1621:98:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2858
            ],
            "body": {
              "id": 2456,
              "nodeType": "Block",
              "src": "1851:42:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2452,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2336,
                      "src": "1868:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2454,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2453,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2446,
                      "src": "1878:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1868:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2451,
                  "id": 2455,
                  "nodeType": "Return",
                  "src": "1861:25:5"
                }
              ]
            },
            "documentation": {
              "id": 2444,
              "nodeType": "StructuredDocumentation",
              "src": "1725:46:5",
              "text": " @dev See {BEP20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 2457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2448,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1819:8:5"
            },
            "parameters": {
              "id": 2447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2446,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2457,
                  "src": "1795:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1794:17:5"
            },
            "returnParameters": {
              "id": 2451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2450,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2457,
                  "src": "1842:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1842:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1841:9:5"
            },
            "scope": 2841,
            "src": "1776:117:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2868
            ],
            "body": {
              "id": 2477,
              "nodeType": "Block",
              "src": "2179:80:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2469,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2301,
                          "src": "2199:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 2470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2199:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2471,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2460,
                        "src": "2213:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2472,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2462,
                        "src": "2224:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2468,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2672,
                      "src": "2189:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:42:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2474,
                  "nodeType": "ExpressionStatement",
                  "src": "2189:42:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2248:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2467,
                  "id": 2476,
                  "nodeType": "Return",
                  "src": "2241:11:5"
                }
              ]
            },
            "documentation": {
              "id": 2458,
              "nodeType": "StructuredDocumentation",
              "src": "1899:191:5",
              "text": " @dev See {BEP20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 2478,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2464,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2155:8:5"
            },
            "parameters": {
              "id": 2463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2460,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2478,
                  "src": "2113:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2113:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2462,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2478,
                  "src": "2132:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2112:35:5"
            },
            "returnParameters": {
              "id": 2467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2466,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2478,
                  "src": "2173:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2465,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2173:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2172:6:5"
            },
            "scope": 2841,
            "src": "2095:164:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2878
            ],
            "body": {
              "id": 2495,
              "nodeType": "Block",
              "src": "2406:51:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2489,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2342,
                        "src": "2423:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2491,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2490,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2481,
                        "src": "2435:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2423:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2493,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2492,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2483,
                      "src": "2442:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2423:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2488,
                  "id": 2494,
                  "nodeType": "Return",
                  "src": "2416:34:5"
                }
              ]
            },
            "documentation": {
              "id": 2479,
              "nodeType": "StructuredDocumentation",
              "src": "2265:46:5",
              "text": " @dev See {BEP20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 2496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2485,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2374:8:5"
            },
            "parameters": {
              "id": 2484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2481,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2496,
                  "src": "2335:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2483,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2496,
                  "src": "2350:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2350:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2334:32:5"
            },
            "returnParameters": {
              "id": 2488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2487,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2496,
                  "src": "2397:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2397:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2396:9:5"
            },
            "scope": 2841,
            "src": "2316:141:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2888
            ],
            "body": {
              "id": 2516,
              "nodeType": "Block",
              "src": "2675:77:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2508,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2301,
                          "src": "2694:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 2509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2694:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2510,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2499,
                        "src": "2708:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2511,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2501,
                        "src": "2717:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2507,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2810,
                      "src": "2685:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2685:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2513,
                  "nodeType": "ExpressionStatement",
                  "src": "2685:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2741:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2506,
                  "id": 2515,
                  "nodeType": "Return",
                  "src": "2734:11:5"
                }
              ]
            },
            "documentation": {
              "id": 2497,
              "nodeType": "StructuredDocumentation",
              "src": "2463:126:5",
              "text": " @dev See {BEP20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 2517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2503,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2651:8:5"
            },
            "parameters": {
              "id": 2502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2499,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2517,
                  "src": "2611:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2611:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2501,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2517,
                  "src": "2628:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2628:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2610:33:5"
            },
            "returnParameters": {
              "id": 2506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2505,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2517,
                  "src": "2669:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2504,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2669:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2668:6:5"
            },
            "scope": 2841,
            "src": "2594:158:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2924
            ],
            "body": {
              "id": 2554,
              "nodeType": "Block",
              "src": "3347:251:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2531,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2520,
                        "src": "3367:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2532,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2522,
                        "src": "3375:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2533,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2524,
                        "src": "3386:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2530,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2672,
                      "src": "3357:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3357:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2535,
                  "nodeType": "ExpressionStatement",
                  "src": "3357:36:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2537,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2520,
                        "src": "3425:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2538,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2301,
                          "src": "3445:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 2539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3445:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2547,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2524,
                            "src": "3509:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 2548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3517:42:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
                              "typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
                            },
                            "value": "BEP20: transfer amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_4f3506f4ba71c79c3cbd442a3afeb30e9b27af2d84e116a4385b34e267d2287e",
                              "typeString": "literal_string \"BEP20: transfer amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2540,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2342,
                                "src": "3471:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 2542,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2541,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2520,
                                "src": "3483:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3471:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2545,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2543,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2301,
                                "src": "3491:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 2544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3491:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3471:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3615,
                          "src": "3471:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 2549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3471:89:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2536,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2810,
                      "src": "3403:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3403:167:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2551,
                  "nodeType": "ExpressionStatement",
                  "src": "3403:167:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3587:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2529,
                  "id": 2553,
                  "nodeType": "Return",
                  "src": "3580:11:5"
                }
              ]
            },
            "documentation": {
              "id": 2518,
              "nodeType": "StructuredDocumentation",
              "src": "2758:446:5",
              "text": " @dev See {BEP20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {BEP20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`\"s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 2555,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2526,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3319:8:5"
            },
            "parameters": {
              "id": 2525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2520,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2555,
                  "src": "3240:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3240:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2522,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2555,
                  "src": "3264:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3264:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2524,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2555,
                  "src": "3291:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3291:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3230:81:5"
            },
            "returnParameters": {
              "id": 2529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2528,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2555,
                  "src": "3337:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2527,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3337:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3336:6:5"
            },
            "scope": 2841,
            "src": "3209:389:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2582,
              "nodeType": "Block",
              "src": "4078:121:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2566,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2301,
                          "src": "4097:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 2567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4097:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2568,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2558,
                        "src": "4111:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2576,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2560,
                            "src": "4159:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2569,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2342,
                                "src": "4120:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 2572,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2570,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2301,
                                  "src": "4132:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 2571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4132:12:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4120:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2574,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2573,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2558,
                              "src": "4146:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4120:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3491,
                          "src": "4120:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4120:50:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2565,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2810,
                      "src": "4088:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4088:83:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2579,
                  "nodeType": "ExpressionStatement",
                  "src": "4088:83:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4188:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2564,
                  "id": 2581,
                  "nodeType": "Return",
                  "src": "4181:11:5"
                }
              ]
            },
            "documentation": {
              "id": 2556,
              "nodeType": "StructuredDocumentation",
              "src": "3604:383:5",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 2583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2558,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2583,
                  "src": "4019:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2560,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2583,
                  "src": "4036:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4036:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4018:37:5"
            },
            "returnParameters": {
              "id": 2564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2563,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2583,
                  "src": "4072:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2562,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4072:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4071:6:5"
            },
            "scope": 2841,
            "src": "3992:207:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2611,
              "nodeType": "Block",
              "src": "4776:213:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2594,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2301,
                          "src": "4808:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 2595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4808:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2596,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2586,
                        "src": "4834:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2604,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2588,
                            "src": "4894:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                            "id": 2605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4911:39:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
                              "typeString": "literal_string \"BEP20: decreased allowance below zero\""
                            },
                            "value": "BEP20: decreased allowance below zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_b7060b3538dcd3ddc8a941c91636a8115a1aa46914747fd9809d543bbb46cd22",
                              "typeString": "literal_string \"BEP20: decreased allowance below zero\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2597,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2342,
                                "src": "4855:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 2600,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2598,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2301,
                                  "src": "4867:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 2599,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4867:12:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4855:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2602,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2601,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2586,
                              "src": "4881:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4855:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3615,
                          "src": "4855:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 2606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4855:96:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2593,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2810,
                      "src": "4786:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4786:175:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2608,
                  "nodeType": "ExpressionStatement",
                  "src": "4786:175:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4978:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2592,
                  "id": 2610,
                  "nodeType": "Return",
                  "src": "4971:11:5"
                }
              ]
            },
            "documentation": {
              "id": 2584,
              "nodeType": "StructuredDocumentation",
              "src": "4205:475:5",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {BEP20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 2612,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2586,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2612,
                  "src": "4712:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4712:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2588,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2612,
                  "src": "4729:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2587,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4729:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4711:42:5"
            },
            "returnParameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2591,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2612,
                  "src": "4770:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2590,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4770:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4769:6:5"
            },
            "scope": 2841,
            "src": "4685:304:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2671,
              "nodeType": "Block",
              "src": "5576:385:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2623,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2615,
                          "src": "5594:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2626,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5612:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5604:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2624,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5604:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5604:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5594:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 2629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5616:39:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
                          "typeString": "literal_string \"BEP20: transfer from the zero address\""
                        },
                        "value": "BEP20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57",
                          "typeString": "literal_string \"BEP20: transfer from the zero address\""
                        }
                      ],
                      "id": 2622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5586:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5586:70:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2631,
                  "nodeType": "ExpressionStatement",
                  "src": "5586:70:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2633,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2617,
                          "src": "5674:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5695:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5687:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2634,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5687:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5687:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5674:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5699:37:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
                          "typeString": "literal_string \"BEP20: transfer to the zero address\""
                        },
                        "value": "BEP20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2",
                          "typeString": "literal_string \"BEP20: transfer to the zero address\""
                        }
                      ],
                      "id": 2632,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5666:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5666:71:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2641,
                  "nodeType": "ExpressionStatement",
                  "src": "5666:71:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2642,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2336,
                        "src": "5748:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2644,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2643,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2615,
                        "src": "5758:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5748:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2649,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2619,
                          "src": "5790:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "42455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                          "id": 2650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5798:40:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
                            "typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
                          },
                          "value": "BEP20: transfer amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_a91efd7a65ef5b4ae4d6568d674798b78a5a89184dd296c100513251c22d3e73",
                            "typeString": "literal_string \"BEP20: transfer amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2645,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2336,
                            "src": "5768:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2647,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2646,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2615,
                            "src": "5778:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5768:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3615,
                        "src": "5768:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 2651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5768:71:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5748:91:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2653,
                  "nodeType": "ExpressionStatement",
                  "src": "5748:91:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2654,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2336,
                        "src": "5849:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2656,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2655,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2617,
                        "src": "5859:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5849:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2661,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2619,
                          "src": "5897:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2657,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2336,
                            "src": "5872:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2659,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2658,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2617,
                            "src": "5882:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5872:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3491,
                        "src": "5872:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5872:32:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5849:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2664,
                  "nodeType": "ExpressionStatement",
                  "src": "5849:55:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2666,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2615,
                        "src": "5928:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2667,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2617,
                        "src": "5936:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2668,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2619,
                        "src": "5947:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2665,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2933,
                      "src": "5919:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5919:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2670,
                  "nodeType": "EmitStatement",
                  "src": "5914:40:5"
                }
              ]
            },
            "documentation": {
              "id": 2613,
              "nodeType": "StructuredDocumentation",
              "src": "4995:463:5",
              "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 2672,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2615,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2672,
                  "src": "5491:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5491:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2617,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2672,
                  "src": "5515:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5515:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2619,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2672,
                  "src": "5542:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5542:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5481:81:5"
            },
            "returnParameters": {
              "id": 2621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5576:0:5"
            },
            "scope": 2841,
            "src": "5463:498:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2717,
              "nodeType": "Block",
              "src": "6288:245:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2681,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2675,
                          "src": "6306:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6325:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6317:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2682,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6317:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6317:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6306:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6329:33:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                          "typeString": "literal_string \"BEP20: mint to the zero address\""
                        },
                        "value": "BEP20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3",
                          "typeString": "literal_string \"BEP20: mint to the zero address\""
                        }
                      ],
                      "id": 2680,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6298:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6298:65:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2689,
                  "nodeType": "ExpressionStatement",
                  "src": "6298:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2690,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2344,
                      "src": "6374:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2693,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2677,
                          "src": "6406:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2691,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2344,
                          "src": "6389:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3491,
                        "src": "6389:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6389:24:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6374:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2696,
                  "nodeType": "ExpressionStatement",
                  "src": "6374:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2697,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2336,
                        "src": "6423:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2699,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2698,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2675,
                        "src": "6433:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6423:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2704,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2677,
                          "src": "6467:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2700,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2336,
                            "src": "6444:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2702,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2701,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2675,
                            "src": "6454:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6444:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3491,
                        "src": "6444:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6444:30:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6423:51:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2707,
                  "nodeType": "ExpressionStatement",
                  "src": "6423:51:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6506:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6498:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2709,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6498:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6498:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2713,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2675,
                        "src": "6510:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2714,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2677,
                        "src": "6519:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2708,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2933,
                      "src": "6489:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6489:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2716,
                  "nodeType": "EmitStatement",
                  "src": "6484:42:5"
                }
              ]
            },
            "documentation": {
              "id": 2673,
              "nodeType": "StructuredDocumentation",
              "src": "5967:259:5",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
            },
            "id": 2718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2675,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2718,
                  "src": "6246:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6246:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2677,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2718,
                  "src": "6263:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6263:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6245:33:5"
            },
            "returnParameters": {
              "id": 2679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6288:0:5"
            },
            "scope": 2841,
            "src": "6231:302:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2764,
              "nodeType": "Block",
              "src": "6909:285:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2727,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2721,
                          "src": "6927:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2730,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6946:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6938:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2728,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6938:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6938:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "6927:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 2733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6950:35:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
                          "typeString": "literal_string \"BEP20: burn from the zero address\""
                        },
                        "value": "BEP20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855",
                          "typeString": "literal_string \"BEP20: burn from the zero address\""
                        }
                      ],
                      "id": 2726,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6919:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6919:67:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2735,
                  "nodeType": "ExpressionStatement",
                  "src": "6919:67:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2736,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2336,
                        "src": "6997:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2738,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2737,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2721,
                        "src": "7007:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6997:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2743,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2723,
                          "src": "7041:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                          "id": 2744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7049:36:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
                            "typeString": "literal_string \"BEP20: burn amount exceeds balance\""
                          },
                          "value": "BEP20: burn amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_deaa84b30175fd0578812c46240362b7914652a35e6707ad7e1556891e4ae032",
                            "typeString": "literal_string \"BEP20: burn amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2739,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2336,
                            "src": "7018:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2741,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2740,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2721,
                            "src": "7028:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7018:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3615,
                        "src": "7018:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 2745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7018:68:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6997:89:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2747,
                  "nodeType": "ExpressionStatement",
                  "src": "6997:89:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2748,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2344,
                      "src": "7096:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2751,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2723,
                          "src": "7128:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2749,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2344,
                          "src": "7111:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3513,
                        "src": "7111:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7111:24:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7096:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2754,
                  "nodeType": "ExpressionStatement",
                  "src": "7096:39:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2756,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2721,
                        "src": "7159:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7176:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7168:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2757,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7168:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7168:10:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2761,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2723,
                        "src": "7180:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2755,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2933,
                      "src": "7150:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7150:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2763,
                  "nodeType": "EmitStatement",
                  "src": "7145:42:5"
                }
              ]
            },
            "documentation": {
              "id": 2719,
              "nodeType": "StructuredDocumentation",
              "src": "6539:308:5",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 2765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2721,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2765,
                  "src": "6867:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6867:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2723,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2765,
                  "src": "6884:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6884:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6866:33:5"
            },
            "returnParameters": {
              "id": 2725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6909:0:5"
            },
            "scope": 2841,
            "src": "6852:342:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2809,
              "nodeType": "Block",
              "src": "7728:257:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2776,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2768,
                          "src": "7746:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7763:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7755:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2777,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7755:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7755:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7746:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 2782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7767:38:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
                          "typeString": "literal_string \"BEP20: approve from the zero address\""
                        },
                        "value": "BEP20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4",
                          "typeString": "literal_string \"BEP20: approve from the zero address\""
                        }
                      ],
                      "id": 2775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7738:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7738:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2784,
                  "nodeType": "ExpressionStatement",
                  "src": "7738:68:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2786,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2770,
                          "src": "7824:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7843:1:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7835:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2787,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7835:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7835:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7824:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "42455032303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 2792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7847:36:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
                          "typeString": "literal_string \"BEP20: approve to the zero address\""
                        },
                        "value": "BEP20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5",
                          "typeString": "literal_string \"BEP20: approve to the zero address\""
                        }
                      ],
                      "id": 2785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7816:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7816:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2794,
                  "nodeType": "ExpressionStatement",
                  "src": "7816:68:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2795,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2342,
                          "src": "7895:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2798,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2796,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2768,
                          "src": "7907:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7895:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2799,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2797,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2770,
                        "src": "7914:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7895:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2800,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2772,
                      "src": "7925:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7895:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2802,
                  "nodeType": "ExpressionStatement",
                  "src": "7895:36:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2804,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2768,
                        "src": "7955:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2805,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2770,
                        "src": "7962:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2806,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2772,
                        "src": "7971:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2803,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2942,
                      "src": "7946:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7946:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2808,
                  "nodeType": "EmitStatement",
                  "src": "7941:37:5"
                }
              ]
            },
            "documentation": {
              "id": 2766,
              "nodeType": "StructuredDocumentation",
              "src": "7200:414:5",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 2810,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2768,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2810,
                  "src": "7646:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2767,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7646:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2770,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2810,
                  "src": "7669:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7669:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2772,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2810,
                  "src": "7694:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7694:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7636:78:5"
            },
            "returnParameters": {
              "id": 2774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7728:0:5"
            },
            "scope": 2841,
            "src": "7619:366:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2839,
              "nodeType": "Block",
              "src": "8224:214:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2819,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2813,
                        "src": "8240:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2820,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2815,
                        "src": "8249:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2818,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2765,
                      "src": "8234:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8234:22:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2822,
                  "nodeType": "ExpressionStatement",
                  "src": "8234:22:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2824,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2813,
                        "src": "8288:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2825,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2301,
                          "src": "8309:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 2826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8309:12:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2834,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2815,
                            "src": "8374:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "42455032303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 2835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8382:38:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
                              "typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
                            },
                            "value": "BEP20: burn amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ec946f0dec32d4be54e4fdba37f6ef29c5468152774e7820c946d7689f97ec88",
                              "typeString": "literal_string \"BEP20: burn amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2827,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2342,
                                "src": "8335:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 2829,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 2828,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2813,
                                "src": "8347:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8335:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2832,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2830,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2301,
                                "src": "8356:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 2831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8356:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8335:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3615,
                          "src": "8335:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 2836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8335:86:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2823,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2810,
                      "src": "8266:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8266:165:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2838,
                  "nodeType": "ExpressionStatement",
                  "src": "8266:165:5"
                }
              ]
            },
            "documentation": {
              "id": 2811,
              "nodeType": "StructuredDocumentation",
              "src": "7991:167:5",
              "text": " @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n from the caller\"s allowance.\n See {_burn} and {_approve}."
            },
            "id": 2840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnFrom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2813,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2840,
                  "src": "8182:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2812,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8182:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2815,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2840,
                  "src": "8199:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8199:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8181:33:5"
            },
            "returnParameters": {
              "id": 2817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8224:0:5"
            },
            "scope": 2841,
            "src": "8163:275:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2842,
        "src": "188:8252:5"
      }
    ],
    "src": "33:8409:5"
  },
  "bytecode": "608060405234801561001057600080fd5b50610c9a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d7146102b5578063a9059cbb146102e1578063dd62ed3e1461030d578063f2fde38b1461033b576100f5565b8063715018a614610277578063893d20e8146102815780638da5cb5b146102a557806395d89b41146102ad576100f5565b806323b872dd116100d357806323b872dd146101d1578063313ce56714610207578063395093511461022557806370a0823114610251576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b610102610361565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103f7565b604080519115158252519081900360200190f35b6101bf610414565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b0381358116916020810135909116906040013561041a565b61020f6104a1565b6040805160ff9092168252519081900360200190f35b6101a36004803603604081101561023b57600080fd5b506001600160a01b0381351690602001356104aa565b6101bf6004803603602081101561026757600080fd5b50356001600160a01b03166104f8565b61027f610513565b005b6102896105c7565b604080516001600160a01b039092168252519081900360200190f35b6102896105d6565b6101026105e5565b6101a3600480360360408110156102cb57600080fd5b506001600160a01b038135169060200135610646565b6101a3600480360360408110156102f757600080fd5b506001600160a01b0381351690602001356106ae565b6101bf6004803603604081101561032357600080fd5b506001600160a01b03813581169160200135166106c2565b61027f6004803603602081101561035157600080fd5b50356001600160a01b03166106ed565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103ed5780601f106103c2576101008083540402835291602001916103ed565b820191906000526020600020905b8154815290600101906020018083116103d057829003601f168201915b5050505050905090565b600061040b610404610763565b8484610767565b50600192915050565b60035490565b6000610427848484610853565b61049784610433610763565b61049285604051806060016040528060288152602001610bad602891396001600160a01b038a16600090815260026020526040812090610471610763565b6001600160a01b0316815260208101919091526040016000205491906109a5565b610767565b5060019392505050565b60065460ff1690565b600061040b6104b7610763565b8461049285600260006104c8610763565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610a3c565b6001600160a01b031660009081526001602052604090205490565b61051b610763565b6000546001600160a01b0390811691161461057d576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60006105d16105d6565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103ed5780601f106103c2576101008083540402835291602001916103ed565b600061040b610653610763565b8461049285604051806060016040528060258152602001610c1e602591396002600061067d610763565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906109a5565b600061040b6106bb610763565b8484610853565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6106f5610763565b6000546001600160a01b03908116911614610757576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61076081610a9d565b50565b3390565b6001600160a01b0383166107ac5760405162461bcd60e51b8152600401808060200182810382526024815260200180610b636024913960400191505060405180910390fd5b6001600160a01b0382166107f15760405162461bcd60e51b8152600401808060200182810382526022815260200180610c436022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108985760405162461bcd60e51b8152600401808060200182810382526025815260200180610b3e6025913960400191505060405180910390fd5b6001600160a01b0382166108dd5760405162461bcd60e51b8152600401808060200182810382526023815260200180610bfb6023913960400191505060405180910390fd5b61091a81604051806060016040528060268152602001610bd5602691396001600160a01b03861660009081526001602052604090205491906109a5565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546109499082610a3c565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610a345760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109f95781810151838201526020016109e1565b50505050905090810190601f168015610a265780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610a96576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038116610ae25760405162461bcd60e51b8152600401808060200182810382526026815260200180610b876026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220643bbe8fcafa9c0520d9c6198f2438ce34d4a8ceccc0eaff02408524cc7aa77064736f6c634300060c0033",
  "bytecodeSha1": "584d17f8ae3593d40e6e095fd88def4b5afcdbfa",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "10": {
        "SafeMath.add": {
          "43": [
            2802,
            2808,
            true
          ]
        },
        "SafeMath.sub": {
          "42": [
            5545,
            5551,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {
        "ERC20._approve": {
          "36": [
            7746,
            7765,
            true
          ],
          "37": [
            7824,
            7845,
            true
          ]
        },
        "ERC20._transfer": {
          "38": [
            5594,
            5614,
            true
          ],
          "39": [
            5674,
            5697,
            true
          ]
        }
      },
      "6": {},
      "8": {
        "Ownable1._transferOwnership": {
          "41": [
            2212,
            2234,
            true
          ]
        },
        "Ownable1.transferOwnership": {
          "40": [
            1226,
            1248,
            true
          ]
        }
      }
    },
    "statements": {
      "10": {
        "SafeMath.add": {
          "31": [
            2794,
            2840
          ],
          "32": [
            2850,
            2858
          ]
        },
        "SafeMath.sub": {
          "29": [
            5537,
            5566
          ],
          "30": [
            5576,
            5588
          ]
        }
      },
      "3": {},
      "4": {
        "Context._msgSender": {
          "19": [
            678,
            695
          ]
        }
      },
      "5": {
        "ERC20._approve": {
          "20": [
            7738,
            7806
          ],
          "21": [
            7816,
            7884
          ],
          "22": [
            7895,
            7931
          ],
          "23": [
            7941,
            7978
          ]
        },
        "ERC20._transfer": {
          "24": [
            5586,
            5656
          ],
          "25": [
            5666,
            5737
          ],
          "26": [
            5748,
            5839
          ],
          "27": [
            5849,
            5904
          ],
          "28": [
            5914,
            5954
          ]
        },
        "ERC20.allowance": {
          "17": [
            2416,
            2450
          ]
        },
        "ERC20.approve": {
          "1": [
            2685,
            2724
          ],
          "2": [
            2734,
            2745
          ]
        },
        "ERC20.balanceOf": {
          "9": [
            1861,
            1886
          ]
        },
        "ERC20.decimals": {
          "7": [
            1385,
            1401
          ]
        },
        "ERC20.decreaseAllowance": {
          "15": [
            4786,
            4961
          ]
        },
        "ERC20.getOwner": {
          "12": [
            1087,
            1101
          ]
        },
        "ERC20.increaseAllowance": {
          "8": [
            4088,
            4171
          ]
        },
        "ERC20.name": {
          "0": [
            1237,
            1249
          ]
        },
        "ERC20.symbol": {
          "14": [
            1541,
            1555
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            1693,
            1712
          ]
        },
        "ERC20.transfer": {
          "16": [
            2189,
            2231
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            3357,
            3393
          ],
          "5": [
            3403,
            3570
          ],
          "6": [
            3580,
            3591
          ]
        }
      },
      "6": {},
      "8": {
        "Ownable1._transferOwnership": {
          "33": [
            2204,
            2277
          ],
          "34": [
            2287,
            2330
          ],
          "35": [
            2340,
            2357
          ]
        },
        "Ownable1.owner": {
          "13": [
            1079,
            1092
          ]
        },
        "Ownable1.renounceOwnership": {
          "10": [
            1701,
            1746
          ],
          "11": [
            1756,
            1775
          ]
        },
        "Ownable1.transferOwnership": {
          "18": [
            2003,
            2031
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "IERC20",
    "Ownable1",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a457c2d711610066578063a457c2d7146102b5578063a9059cbb146102e1578063dd62ed3e1461030d578063f2fde38b1461033b576100f5565b8063715018a614610277578063893d20e8146102815780638da5cb5b146102a557806395d89b41146102ad576100f5565b806323b872dd116100d357806323b872dd146101d1578063313ce56714610207578063395093511461022557806370a0823114610251576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b610102610361565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103f7565b604080519115158252519081900360200190f35b6101bf610414565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b0381358116916020810135909116906040013561041a565b61020f6104a1565b6040805160ff9092168252519081900360200190f35b6101a36004803603604081101561023b57600080fd5b506001600160a01b0381351690602001356104aa565b6101bf6004803603602081101561026757600080fd5b50356001600160a01b03166104f8565b61027f610513565b005b6102896105c7565b604080516001600160a01b039092168252519081900360200190f35b6102896105d6565b6101026105e5565b6101a3600480360360408110156102cb57600080fd5b506001600160a01b038135169060200135610646565b6101a3600480360360408110156102f757600080fd5b506001600160a01b0381351690602001356106ae565b6101bf6004803603604081101561032357600080fd5b506001600160a01b03813581169160200135166106c2565b61027f6004803603602081101561035157600080fd5b50356001600160a01b03166106ed565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103ed5780601f106103c2576101008083540402835291602001916103ed565b820191906000526020600020905b8154815290600101906020018083116103d057829003601f168201915b5050505050905090565b600061040b610404610763565b8484610767565b50600192915050565b60035490565b6000610427848484610853565b61049784610433610763565b61049285604051806060016040528060288152602001610bad602891396001600160a01b038a16600090815260026020526040812090610471610763565b6001600160a01b0316815260208101919091526040016000205491906109a5565b610767565b5060019392505050565b60065460ff1690565b600061040b6104b7610763565b8461049285600260006104c8610763565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610a3c565b6001600160a01b031660009081526001602052604090205490565b61051b610763565b6000546001600160a01b0390811691161461057d576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60006105d16105d6565b905090565b6000546001600160a01b031690565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103ed5780601f106103c2576101008083540402835291602001916103ed565b600061040b610653610763565b8461049285604051806060016040528060258152602001610c1e602591396002600061067d610763565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906109a5565b600061040b6106bb610763565b8484610853565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6106f5610763565b6000546001600160a01b03908116911614610757576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61076081610a9d565b50565b3390565b6001600160a01b0383166107ac5760405162461bcd60e51b8152600401808060200182810382526024815260200180610b636024913960400191505060405180910390fd5b6001600160a01b0382166107f15760405162461bcd60e51b8152600401808060200182810382526022815260200180610c436022913960400191505060405180910390fd5b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166108985760405162461bcd60e51b8152600401808060200182810382526025815260200180610b3e6025913960400191505060405180910390fd5b6001600160a01b0382166108dd5760405162461bcd60e51b8152600401808060200182810382526023815260200180610bfb6023913960400191505060405180910390fd5b61091a81604051806060016040528060268152602001610bd5602691396001600160a01b03861660009081526001602052604090205491906109a5565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546109499082610a3c565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610a345760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109f95781810151838201526020016109e1565b50505050905090810190601f168015610a265780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610a96576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038116610ae25760405162461bcd60e51b8152600401808060200182810382526026815260200180610b876026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe42455032303a207472616e736665722066726f6d20746865207a65726f206164647265737342455032303a20617070726f76652066726f6d20746865207a65726f20616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737342455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a207472616e7366657220746f20746865207a65726f206164647265737342455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a20617070726f766520746f20746865207a65726f2061646472657373a2646970667358221220643bbe8fcafa9c0520d9c6198f2438ce34d4a8ceccc0eaff02408524cc7aa77064736f6c634300060c0033",
  "deployedSourceMap": "188:8252:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1166:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2594:158;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2594:158:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1621:98;;;:::i;:::-;;;;;;;;;;;;;;;;3209:389;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3209:389:5;;;;;;;;;;;;;;;;;:::i;1318:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3992:207;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3992:207:5;;;;;;;;:::i;1776:117::-;;;;;;;;;;;;;;;;-1:-1:-1;1776:117:5;-1:-1:-1;;;;;1776:117:5;;:::i;1645:137:8:-;;;:::i;:::-;;1018:90:5;;;:::i;:::-;;;;-1:-1:-1;;;;;1018:90:5;;;;;;;;;;;;;;1022:77:8;;;:::i;1468:94:5:-;;;:::i;4685:304::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4685:304:5;;;;;;;;:::i;2095:164::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2095:164:5;;;;;;;;:::i;2316:141::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2316:141:5;;;;;;;;;;:::i;1931:107:8:-;;;;;;;;;;;;;;;;-1:-1:-1;1931:107:8;-1:-1:-1;;;;;1931:107:8;;:::i;1166:90:5:-;1244:5;1237:12;;;;;;;;-1:-1:-1;;1237:12:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1212:13;;1237:12;;1244:5;;1237:12;;1244:5;1237:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1166:90;:::o;2594:158::-;2669:4;2685:39;2694:12;:10;:12::i;:::-;2708:7;2717:6;2685:8;:39::i;:::-;-1:-1:-1;2741:4:5;2594:158;;;;:::o;1621:98::-;1700:12;;1621:98;:::o;3209:389::-;3337:4;3357:36;3367:6;3375:9;3386:6;3357:9;:36::i;:::-;3403:167;3425:6;3445:12;:10;:12::i;:::-;3471:89;3509:6;3471:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3471:19:5;;;;;;:11;:19;;;;;;3491:12;:10;:12::i;:::-;-1:-1:-1;;;;;3471:33:5;;;;;;;;;;;;-1:-1:-1;3471:33:5;;;:89;:37;:89::i;:::-;3403:8;:167::i;:::-;-1:-1:-1;3587:4:5;3209:389;;;;;:::o;1318:90::-;1392:9;;;;1318:90;:::o;3992:207::-;4072:4;4088:83;4097:12;:10;:12::i;:::-;4111:7;4120:50;4159:10;4120:11;:25;4132:12;:10;:12::i;:::-;-1:-1:-1;;;;;4120:25:5;;;;;;;;;;;;;;;;;-1:-1:-1;4120:25:5;;;:34;;;;;;;;;;;:38;:50::i;1776:117::-;-1:-1:-1;;;;;1868:18:5;1842:7;1868:18;;;:9;:18;;;;;;;1776:117::o;1645:137:8:-;1236:12;:10;:12::i;:::-;1226:6;;-1:-1:-1;;;;;1226:6:8;;;:22;;;1218:67;;;;;-1:-1:-1;;;1218:67:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1743:1:::1;1727:6:::0;;1706:40:::1;::::0;-1:-1:-1;;;;;1727:6:8;;::::1;::::0;1706:40:::1;::::0;1743:1;;1706:40:::1;1773:1;1756:19:::0;;-1:-1:-1;;;;;;1756:19:8::1;::::0;;1645:137::o;1018:90:5:-;1068:7;1094;:5;:7::i;:::-;1087:14;;1018:90;:::o;1022:77:8:-;1060:7;1086:6;-1:-1:-1;;;;;1086:6:8;1022:77;:::o;1468:94:5:-;1548:7;1541:14;;;;;;;;-1:-1:-1;;1541:14:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1516:13;;1541:14;;1548:7;;1541:14;;1548:7;1541:14;;;;;;;;;;;;;;;;;;;;;;;;4685:304;4770:4;4786:175;4808:12;:10;:12::i;:::-;4834:7;4855:96;4894:15;4855:96;;;;;;;;;;;;;;;;;:11;:25;4867:12;:10;:12::i;:::-;-1:-1:-1;;;;;4855:25:5;;;;;;;;;;;;;;;;;-1:-1:-1;4855:25:5;;;:34;;;;;;;;;;;:96;:38;:96::i;2095:164::-;2173:4;2189:42;2199:12;:10;:12::i;:::-;2213:9;2224:6;2189:9;:42::i;2316:141::-;-1:-1:-1;;;;;2423:18:5;;;2397:7;2423:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2316:141::o;1931:107:8:-;1236:12;:10;:12::i;:::-;1226:6;;-1:-1:-1;;;;;1226:6:8;;;:22;;;1218:67;;;;;-1:-1:-1;;;1218:67:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2003:28:::1;2022:8;2003:18;:28::i;:::-;1931:107:::0;:::o;598:104:4:-;685:10;598:104;:::o;7619:366:5:-;-1:-1:-1;;;;;7746:19:5;;7738:68;;;;-1:-1:-1;;;7738:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7824:21:5;;7816:68;;;;-1:-1:-1;;;7816:68:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7895:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7946:32;;;;;;;;;;;;;;;;;7619:366;;;:::o;5463:498::-;-1:-1:-1;;;;;5594:20:5;;5586:70;;;;-1:-1:-1;;;5586:70:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5674:23:5;;5666:71;;;;-1:-1:-1;;;5666:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5768;5790:6;5768:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5768:17:5;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;5748:17:5;;;;;;;:9;:17;;;;;;:91;;;;5872:20;;;;;;;:32;;5897:6;5872:24;:32::i;:::-;-1:-1:-1;;;;;5849:20:5;;;;;;;:9;:20;;;;;;;;;:55;;;;5919:35;;;;;;;5849:20;;5919:35;;;;;;;;;;;;;5463:498;;;:::o;5432:163:10:-;5518:7;5553:12;5545:6;;;;5537:29;;;;-1:-1:-1;;;5537:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5583:5:10;;;5432:163::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2690:175;-1:-1:-1;;;2690:175:10:o;2139:225:8:-;-1:-1:-1;;;;;2212:22:8;;2204:73;;;;-1:-1:-1;;;2204:73:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2313:6;;;2292:38;;-1:-1:-1;;;;;2292:38:8;;;;2313:6;;;2292:38;;;2340:6;:17;;-1:-1:-1;;;;;;2340:17:8;-1:-1:-1;;;;;2340:17:8;;;;;;;;;;2139:225::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {BEP20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {BEP20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the token decimals."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getOwner()": {
        "details": "Returns the address of the current owner."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the token name."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the token symbol."
      },
      "totalSupply()": {
        "details": "See {BEP20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`\"s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    188,
    8440
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33B JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2AD JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x251 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x361 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x169 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x41A JUMP JUMPDEST PUSH2 0x20F PUSH2 0x4A1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4F8 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x513 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x289 PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x102 PUSH2 0x5E5 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x646 JUMP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x6C2 JUMP JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3ED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B PUSH2 0x404 PUSH2 0x763 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x767 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x427 DUP5 DUP5 DUP5 PUSH2 0x853 JUMP JUMPDEST PUSH2 0x497 DUP5 PUSH2 0x433 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x492 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBAD PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x471 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B PUSH2 0x4B7 PUSH2 0x763 JUMP JUMPDEST DUP5 PUSH2 0x492 DUP6 PUSH1 0x2 PUSH1 0x0 PUSH2 0x4C8 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x51B PUSH2 0x763 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x57D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D1 PUSH2 0x5D6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x3ED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B PUSH2 0x653 PUSH2 0x763 JUMP JUMPDEST DUP5 PUSH2 0x492 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC1E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x2 PUSH1 0x0 PUSH2 0x67D PUSH2 0x763 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40B PUSH2 0x6BB PUSH2 0x763 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x853 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6F5 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x757 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x760 DUP2 PUSH2 0xA9D JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB63 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xC43 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x898 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB3E PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xBFB PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91A DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD5 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x949 SWAP1 DUP3 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9F9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9E1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA26 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xA96 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xB87 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID TIMESTAMP GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E736665722066726F6D20746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x65737342455032303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F206164647265737342455032303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E74206578636565647320616C6C6F77616E63654245 POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x2062616C616E636542455032303A207472616E73 PUSH7 0x657220746F2074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737342 GASLIMIT POP ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F42455032 ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x657373A2646970667358221220643BBE8FCAFA SWAP13 SDIV KECCAK256 0xD9 0xC6 NOT DUP16 0x24 CODESIZE 0xCE CALLVALUE 0xD4 0xA8 0xCE 0xCC 0xC0 0xEA SELFDESTRUCT MUL BLOCKHASH DUP6 0x24 0xCC PUSH27 0xA77064736F6C634300060C00330000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        188,
        8440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "GT",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA457C2D7"
    },
    "49": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "GT",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA457C2D7"
    },
    "60": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B5"
    },
    "64": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA9059CBB"
    },
    "71": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2E1"
    },
    "75": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDD62ED3E"
    },
    "82": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30D"
    },
    "86": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "94": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33B"
    },
    "97": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "98": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF5"
    },
    "101": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMP",
      "path": "5"
    },
    "102": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "104": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "109": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "110": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x277"
    },
    "113": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "114": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "115": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x893D20E8"
    },
    "120": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "121": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x281"
    },
    "124": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "125": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "126": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "132": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2A5"
    },
    "135": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "136": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "137": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95D89B41"
    },
    "142": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "143": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AD"
    },
    "146": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "147": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF5"
    },
    "150": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMP",
      "path": "5"
    },
    "151": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "152": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "153": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "158": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "GT",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "163": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "164": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x23B872DD"
    },
    "169": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "170": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1D1"
    },
    "173": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "174": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "175": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x313CE567"
    },
    "180": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "181": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x207"
    },
    "184": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "185": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "186": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x39509351"
    },
    "191": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "192": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x225"
    },
    "195": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "196": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "197": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "202": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "203": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x251"
    },
    "206": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "207": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF5"
    },
    "210": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMP",
      "path": "5"
    },
    "211": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "212": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "213": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6FDDE03"
    },
    "218": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "219": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "223": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "224": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95EA7B3"
    },
    "229": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "230": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x177"
    },
    "233": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "234": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "235": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x18160DDD"
    },
    "240": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "EQ",
      "path": "5"
    },
    "241": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B7"
    },
    "244": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "245": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "246": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        188,
        8440
      ],
      "op": "REVERT",
      "path": "5"
    },
    "250": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "251": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x102"
    },
    "254": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x361"
    },
    "257": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMP",
      "path": "5"
    },
    "258": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "259": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "261": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP1",
      "path": "5"
    },
    "262": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "263": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "265": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP1",
      "path": "5"
    },
    "266": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP3",
      "path": "5"
    },
    "267": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "268": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP4",
      "path": "5"
    },
    "269": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "270": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP2",
      "path": "5"
    },
    "271": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP4",
      "path": "5"
    },
    "272": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "ADD",
      "path": "5"
    },
    "273": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "274": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP4",
      "path": "5"
    },
    "275": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "276": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "277": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "278": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP4",
      "path": "5"
    },
    "279": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "280": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "281": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP4",
      "path": "5"
    },
    "282": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "ADD",
      "path": "5"
    },
    "283": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "284": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP6",
      "path": "5"
    },
    "285": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "ADD",
      "path": "5"
    },
    "286": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "287": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP1",
      "path": "5"
    },
    "288": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP4",
      "path": "5"
    },
    "289": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP4",
      "path": "5"
    },
    "290": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "292": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "293": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP4",
      "path": "5"
    },
    "294": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP2",
      "path": "5"
    },
    "295": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "LT",
      "path": "5"
    },
    "296": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "297": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13C"
    },
    "300": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "301": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP2",
      "path": "5"
    },
    "302": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP2",
      "path": "5"
    },
    "303": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "ADD",
      "path": "5"
    },
    "304": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "305": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP4",
      "path": "5"
    },
    "306": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP3",
      "path": "5"
    },
    "307": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "ADD",
      "path": "5"
    },
    "308": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "309": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "311": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "ADD",
      "path": "5"
    },
    "312": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x124"
    },
    "315": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMP",
      "path": "5"
    },
    "316": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "317": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "POP",
      "path": "5"
    },
    "318": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "POP",
      "path": "5"
    },
    "319": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "POP",
      "path": "5"
    },
    "320": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "POP",
      "path": "5"
    },
    "321": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "322": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "POP",
      "path": "5"
    },
    "323": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "324": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP2",
      "path": "5"
    },
    "325": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "ADD",
      "path": "5"
    },
    "326": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "327": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "329": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "AND",
      "path": "5"
    },
    "330": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP1",
      "path": "5"
    },
    "331": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "332": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x169"
    },
    "335": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "336": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP1",
      "path": "5"
    },
    "337": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP3",
      "path": "5"
    },
    "338": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SUB",
      "path": "5"
    },
    "339": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP1",
      "path": "5"
    },
    "340": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "341": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "343": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP4",
      "path": "5"
    },
    "344": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "346": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SUB",
      "path": "5"
    },
    "347": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "350": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "EXP",
      "path": "5"
    },
    "351": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SUB",
      "path": "5"
    },
    "352": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "NOT",
      "path": "5"
    },
    "353": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "AND",
      "path": "5"
    },
    "354": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP2",
      "path": "5"
    },
    "355": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "356": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "358": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "ADD",
      "path": "5"
    },
    "359": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "360": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "POP",
      "path": "5"
    },
    "361": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "362": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "POP",
      "path": "5"
    },
    "363": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "364": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "POP",
      "path": "5"
    },
    "365": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "POP",
      "path": "5"
    },
    "366": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "POP",
      "path": "5"
    },
    "367": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "369": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "370": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "DUP1",
      "path": "5"
    },
    "371": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "372": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SUB",
      "path": "5"
    },
    "373": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "374": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "RETURN",
      "path": "5"
    },
    "375": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "376": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A3"
    },
    "379": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "381": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "DUP1",
      "path": "5"
    },
    "382": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "383": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "SUB",
      "path": "5"
    },
    "384": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "386": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "DUP2",
      "path": "5"
    },
    "387": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "LT",
      "path": "5"
    },
    "388": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "389": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x18D"
    },
    "392": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "393": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "395": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "DUP1",
      "path": "5"
    },
    "396": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "REVERT",
      "path": "5"
    },
    "397": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "DUP2",
      "path": "5"
    },
    "408": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "409": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "AND",
      "path": "5"
    },
    "410": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "411": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "413": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "ADD",
      "path": "5"
    },
    "414": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "415": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F7"
    },
    "418": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2594,
        2752
      ],
      "op": "JUMP",
      "path": "5"
    },
    "419": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "420": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "422": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "DUP1",
      "path": "5"
    },
    "423": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "424": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "425": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "426": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "427": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "DUP3",
      "path": "5"
    },
    "428": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "429": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "430": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "431": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "DUP2",
      "path": "5"
    },
    "432": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "433": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "SUB",
      "path": "5"
    },
    "434": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "436": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "ADD",
      "path": "5"
    },
    "437": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "438": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "RETURN",
      "path": "5"
    },
    "439": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "440": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BF"
    },
    "443": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x414"
    },
    "446": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        1621,
        1719
      ],
      "op": "JUMP",
      "path": "5"
    },
    "447": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "448": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "450": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "DUP1",
      "path": "5"
    },
    "451": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "452": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "453": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "DUP3",
      "path": "5"
    },
    "454": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "455": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "456": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "457": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "DUP2",
      "path": "5"
    },
    "458": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "459": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "SUB",
      "path": "5"
    },
    "460": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "462": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "ADD",
      "path": "5"
    },
    "463": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "464": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "RETURN",
      "path": "5"
    },
    "465": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "466": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A3"
    },
    "469": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "471": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "472": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "473": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "SUB",
      "path": "5"
    },
    "474": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "476": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "477": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "LT",
      "path": "5"
    },
    "478": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "479": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E7"
    },
    "482": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "483": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "485": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "DUP1",
      "path": "5"
    },
    "486": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "REVERT",
      "path": "5"
    },
    "487": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "488": {
      "op": "POP"
    },
    "489": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "493": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "495": {
      "op": "SHL"
    },
    "496": {
      "op": "SUB"
    },
    "497": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "498": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "499": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "500": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "AND",
      "path": "5"
    },
    "501": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "502": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "504": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "DUP2",
      "path": "5"
    },
    "505": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "ADD",
      "path": "5"
    },
    "506": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "507": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "508": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "509": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "AND",
      "path": "5"
    },
    "510": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "511": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "513": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "ADD",
      "path": "5"
    },
    "514": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "515": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x41A"
    },
    "518": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3209,
        3598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "519": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "520": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20F"
    },
    "523": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4A1"
    },
    "526": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        1318,
        1408
      ],
      "op": "JUMP",
      "path": "5"
    },
    "527": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "528": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "530": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "DUP1",
      "path": "5"
    },
    "531": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "532": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "534": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "535": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "536": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "AND",
      "path": "5"
    },
    "537": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "DUP3",
      "path": "5"
    },
    "538": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "539": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "540": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "541": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "DUP2",
      "path": "5"
    },
    "542": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "543": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "SUB",
      "path": "5"
    },
    "544": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "546": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "ADD",
      "path": "5"
    },
    "547": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "548": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "RETURN",
      "path": "5"
    },
    "549": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "550": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A3"
    },
    "553": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "555": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "DUP1",
      "path": "5"
    },
    "556": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "557": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "SUB",
      "path": "5"
    },
    "558": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "560": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "DUP2",
      "path": "5"
    },
    "561": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "LT",
      "path": "5"
    },
    "562": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "563": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23B"
    },
    "566": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "567": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "569": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "DUP1",
      "path": "5"
    },
    "570": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "REVERT",
      "path": "5"
    },
    "571": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "572": {
      "op": "POP"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "579": {
      "op": "SHL"
    },
    "580": {
      "op": "SUB"
    },
    "581": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "DUP2",
      "path": "5"
    },
    "582": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "583": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "AND",
      "path": "5"
    },
    "584": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "585": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "587": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "ADD",
      "path": "5"
    },
    "588": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "589": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4AA"
    },
    "592": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        3992,
        4199
      ],
      "op": "JUMP",
      "path": "5"
    },
    "593": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "594": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BF"
    },
    "597": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "599": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "DUP1",
      "path": "5"
    },
    "600": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "601": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "SUB",
      "path": "5"
    },
    "602": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "604": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "DUP2",
      "path": "5"
    },
    "605": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "LT",
      "path": "5"
    },
    "606": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "607": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x267"
    },
    "610": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "611": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "613": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "DUP1",
      "path": "5"
    },
    "614": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "REVERT",
      "path": "5"
    },
    "615": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "616": {
      "op": "POP"
    },
    "617": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "624": {
      "op": "SHL"
    },
    "625": {
      "op": "SUB"
    },
    "626": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "AND",
      "path": "5"
    },
    "627": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4F8"
    },
    "630": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        1776,
        1893
      ],
      "op": "JUMP",
      "path": "5"
    },
    "631": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1645,
        1782
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "632": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1645,
        1782
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x27F"
    },
    "635": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1645,
        1782
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x513"
    },
    "638": {
      "fn": "Ownable1.renounceOwnership",
      "jump": "i",
      "offset": [
        1645,
        1782
      ],
      "op": "JUMP",
      "path": "8"
    },
    "639": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1645,
        1782
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "640": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1645,
        1782
      ],
      "op": "STOP",
      "path": "8"
    },
    "641": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "642": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x289"
    },
    "645": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5C7"
    },
    "648": {
      "fn": "ERC20.getOwner",
      "jump": "i",
      "offset": [
        1018,
        1108
      ],
      "op": "JUMP",
      "path": "5"
    },
    "649": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "650": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "652": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "DUP1",
      "path": "5"
    },
    "653": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "660": {
      "op": "SHL"
    },
    "661": {
      "op": "SUB"
    },
    "662": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "663": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "664": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "AND",
      "path": "5"
    },
    "665": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "DUP3",
      "path": "5"
    },
    "666": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "667": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "668": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "669": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "DUP2",
      "path": "5"
    },
    "670": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "671": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "SUB",
      "path": "5"
    },
    "672": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "674": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "ADD",
      "path": "5"
    },
    "675": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "676": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "RETURN",
      "path": "5"
    },
    "677": {
      "fn": "Ownable1.owner",
      "offset": [
        1022,
        1099
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "678": {
      "fn": "Ownable1.owner",
      "offset": [
        1022,
        1099
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x289"
    },
    "681": {
      "fn": "Ownable1.owner",
      "offset": [
        1022,
        1099
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5D6"
    },
    "684": {
      "fn": "Ownable1.owner",
      "jump": "i",
      "offset": [
        1022,
        1099
      ],
      "op": "JUMP",
      "path": "8"
    },
    "685": {
      "fn": "ERC20.symbol",
      "offset": [
        1468,
        1562
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "686": {
      "fn": "ERC20.symbol",
      "offset": [
        1468,
        1562
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x102"
    },
    "689": {
      "fn": "ERC20.symbol",
      "offset": [
        1468,
        1562
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E5"
    },
    "692": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        1468,
        1562
      ],
      "op": "JUMP",
      "path": "5"
    },
    "693": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "694": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A3"
    },
    "697": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "699": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "DUP1",
      "path": "5"
    },
    "700": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "701": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "SUB",
      "path": "5"
    },
    "702": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "704": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "DUP2",
      "path": "5"
    },
    "705": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "LT",
      "path": "5"
    },
    "706": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "707": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CB"
    },
    "710": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "711": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "713": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "DUP1",
      "path": "5"
    },
    "714": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "REVERT",
      "path": "5"
    },
    "715": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "716": {
      "op": "POP"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "723": {
      "op": "SHL"
    },
    "724": {
      "op": "SUB"
    },
    "725": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "DUP2",
      "path": "5"
    },
    "726": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "727": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "AND",
      "path": "5"
    },
    "728": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "729": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "731": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "ADD",
      "path": "5"
    },
    "732": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "733": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x646"
    },
    "736": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4685,
        4989
      ],
      "op": "JUMP",
      "path": "5"
    },
    "737": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "738": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A3"
    },
    "741": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "743": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "DUP1",
      "path": "5"
    },
    "744": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "745": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "SUB",
      "path": "5"
    },
    "746": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "748": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "DUP2",
      "path": "5"
    },
    "749": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "LT",
      "path": "5"
    },
    "750": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "751": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2F7"
    },
    "754": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "755": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "757": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "DUP1",
      "path": "5"
    },
    "758": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "REVERT",
      "path": "5"
    },
    "759": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "760": {
      "op": "POP"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "767": {
      "op": "SHL"
    },
    "768": {
      "op": "SUB"
    },
    "769": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "DUP2",
      "path": "5"
    },
    "770": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "771": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "AND",
      "path": "5"
    },
    "772": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "773": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "775": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "ADD",
      "path": "5"
    },
    "776": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "777": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6AE"
    },
    "780": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2095,
        2259
      ],
      "op": "JUMP",
      "path": "5"
    },
    "781": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "782": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BF"
    },
    "785": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "787": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "DUP1",
      "path": "5"
    },
    "788": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "789": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "SUB",
      "path": "5"
    },
    "790": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "792": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "793": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "LT",
      "path": "5"
    },
    "794": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "795": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x323"
    },
    "798": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "799": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "801": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "DUP1",
      "path": "5"
    },
    "802": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "REVERT",
      "path": "5"
    },
    "803": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "811": {
      "op": "SHL"
    },
    "812": {
      "op": "SUB"
    },
    "813": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "814": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "815": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "816": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "AND",
      "path": "5"
    },
    "817": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "818": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "820": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "ADD",
      "path": "5"
    },
    "821": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "822": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "AND",
      "path": "5"
    },
    "823": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6C2"
    },
    "826": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        2316,
        2457
      ],
      "op": "JUMP",
      "path": "5"
    },
    "827": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "828": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x27F"
    },
    "831": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "833": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "DUP1",
      "path": "8"
    },
    "834": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "835": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "SUB",
      "path": "8"
    },
    "836": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "838": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "DUP2",
      "path": "8"
    },
    "839": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "LT",
      "path": "8"
    },
    "840": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "841": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x351"
    },
    "844": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "845": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "847": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "DUP1",
      "path": "8"
    },
    "848": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "REVERT",
      "path": "8"
    },
    "849": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "850": {
      "op": "POP"
    },
    "851": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "CALLDATALOAD",
      "path": "8"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "858": {
      "op": "SHL"
    },
    "859": {
      "op": "SUB"
    },
    "860": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "AND",
      "path": "8"
    },
    "861": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6ED"
    },
    "864": {
      "fn": "Ownable1.transferOwnership",
      "jump": "i",
      "offset": [
        1931,
        2038
      ],
      "op": "JUMP",
      "path": "8"
    },
    "865": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "866": {
      "fn": "ERC20.name",
      "offset": [
        1244,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 0,
      "value": "0x4"
    },
    "868": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP1",
      "path": "5"
    },
    "869": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "870": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "872": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP1",
      "path": "5"
    },
    "873": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "874": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "876": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "878": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "882": {
      "op": "NOT"
    },
    "883": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "886": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "888": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP9",
      "path": "5"
    },
    "889": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "AND",
      "path": "5"
    },
    "890": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "891": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "MUL",
      "path": "5"
    },
    "892": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "ADD",
      "path": "5"
    },
    "893": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "894": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "895": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "AND",
      "path": "5"
    },
    "896": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "897": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "898": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "899": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DIV",
      "path": "5"
    },
    "900": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "901": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP5",
      "path": "5"
    },
    "902": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "ADD",
      "path": "5"
    },
    "903": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP2",
      "path": "5"
    },
    "904": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "905": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DIV",
      "path": "5"
    },
    "906": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP2",
      "path": "5"
    },
    "907": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "MUL",
      "path": "5"
    },
    "908": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP3",
      "path": "5"
    },
    "909": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "ADD",
      "path": "5"
    },
    "910": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP2",
      "path": "5"
    },
    "911": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "ADD",
      "path": "5"
    },
    "912": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "913": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "914": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "915": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP3",
      "path": "5"
    },
    "916": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP2",
      "path": "5"
    },
    "917": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "918": {
      "fn": "ERC20.name",
      "offset": [
        1212,
        1225
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "920": {
      "fn": "ERC20.name",
      "offset": [
        1212,
        1225
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "921": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "922": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "923": {
      "fn": "ERC20.name",
      "offset": [
        1244,
        1249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "924": {
      "fn": "ERC20.name",
      "offset": [
        1244,
        1249
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "925": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP4",
      "path": "5"
    },
    "926": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "ADD",
      "path": "5"
    },
    "927": {
      "fn": "ERC20.name",
      "offset": [
        1244,
        1249
      ],
      "op": "DUP3",
      "path": "5"
    },
    "928": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP3",
      "path": "5"
    },
    "929": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP1",
      "path": "5"
    },
    "930": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "931": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3ED"
    },
    "934": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "935": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP1",
      "path": "5"
    },
    "936": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "938": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "LT",
      "path": "5"
    },
    "939": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C2"
    },
    "942": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "943": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "946": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP1",
      "path": "5"
    },
    "947": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP4",
      "path": "5"
    },
    "948": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "949": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DIV",
      "path": "5"
    },
    "950": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "MUL",
      "path": "5"
    },
    "951": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP4",
      "path": "5"
    },
    "952": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "953": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "954": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "956": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "ADD",
      "path": "5"
    },
    "957": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "958": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3ED"
    },
    "961": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "JUMP",
      "path": "5"
    },
    "962": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "963": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP3",
      "path": "5"
    },
    "964": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "ADD",
      "path": "5"
    },
    "965": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "966": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "967": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "969": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "970": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "972": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "974": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "975": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "976": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "977": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP2",
      "path": "5"
    },
    "978": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "979": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP2",
      "path": "5"
    },
    "980": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "981": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "982": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "984": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "ADD",
      "path": "5"
    },
    "985": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "986": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "988": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "ADD",
      "path": "5"
    },
    "989": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP1",
      "path": "5"
    },
    "990": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP4",
      "path": "5"
    },
    "991": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "GT",
      "path": "5"
    },
    "992": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D0"
    },
    "995": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "996": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP3",
      "path": "5"
    },
    "997": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "998": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SUB",
      "path": "5"
    },
    "999": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1001": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "AND",
      "path": "5"
    },
    "1002": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1003": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "ADD",
      "path": "5"
    },
    "1004": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1005": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1006": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "POP",
      "path": "5"
    },
    "1007": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "POP",
      "path": "5"
    },
    "1008": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "POP",
      "path": "5"
    },
    "1009": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "POP",
      "path": "5"
    },
    "1010": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "POP",
      "path": "5"
    },
    "1011": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1012": {
      "fn": "ERC20.name",
      "offset": [
        1237,
        1249
      ],
      "op": "POP",
      "path": "5"
    },
    "1013": {
      "fn": "ERC20.name",
      "offset": [
        1166,
        1256
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1014": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        1166,
        1256
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1015": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1016": {
      "fn": "ERC20.approve",
      "offset": [
        2669,
        2673
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1018": {
      "fn": "ERC20.approve",
      "offset": [
        2685,
        2724
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 1,
      "value": "0x40B"
    },
    "1021": {
      "fn": "ERC20.approve",
      "offset": [
        2694,
        2706
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x404"
    },
    "1024": {
      "fn": "ERC20.approve",
      "offset": [
        2694,
        2704
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x763"
    },
    "1027": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2694,
        2706
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1028": {
      "fn": "ERC20.approve",
      "offset": [
        2694,
        2706
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1029": {
      "fn": "ERC20.approve",
      "offset": [
        2708,
        2715
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1030": {
      "fn": "ERC20.approve",
      "offset": [
        2717,
        2723
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1031": {
      "fn": "ERC20.approve",
      "offset": [
        2685,
        2693
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x767"
    },
    "1034": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        2685,
        2724
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1035": {
      "fn": "ERC20.approve",
      "offset": [
        2685,
        2724
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1036": {
      "op": "POP"
    },
    "1037": {
      "fn": "ERC20.approve",
      "offset": [
        2741,
        2745
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x1"
    },
    "1039": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1040": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1041": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "POP",
      "path": "5"
    },
    "1042": {
      "fn": "ERC20.approve",
      "offset": [
        2594,
        2752
      ],
      "op": "POP",
      "path": "5"
    },
    "1043": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        2594,
        2752
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1044": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1045": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1700,
        1712
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x3"
    },
    "1047": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1700,
        1712
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1048": {
      "fn": "ERC20.totalSupply",
      "offset": [
        1621,
        1719
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1049": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        1621,
        1719
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1050": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1051": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3337,
        3341
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1053": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3357,
        3393
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 4,
      "value": "0x427"
    },
    "1056": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3367,
        3373
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1057": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3375,
        3384
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1058": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3386,
        3392
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1059": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3357,
        3366
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x853"
    },
    "1062": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3357,
        3393
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1063": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3357,
        3393
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1064": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3403,
        3570
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 5,
      "value": "0x497"
    },
    "1067": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3425,
        3431
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1068": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3445,
        3457
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x433"
    },
    "1071": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3445,
        3455
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x763"
    },
    "1074": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3445,
        3457
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1075": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3445,
        3457
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1076": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x492"
    },
    "1079": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3509,
        3515
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1080": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1082": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1083": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1084": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1086": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "ADD",
      "path": "5"
    },
    "1087": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1089": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1090": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1091": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "1093": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1094": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1095": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1097": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "ADD",
      "path": "5"
    },
    "1098": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBAD"
    },
    "1101": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x28"
    },
    "1103": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1104": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "op": "SUB"
    },
    "1113": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3490
      ],
      "op": "DUP11",
      "path": "5"
    },
    "1114": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3490
      ],
      "op": "AND",
      "path": "5"
    },
    "1115": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3490
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1117": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1118": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1119": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1120": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3482
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1122": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3490
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1124": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3490
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1125": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3490
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1127": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3490
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1128": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3490
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1129": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3490
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1130": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3491,
        3503
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x471"
    },
    "1133": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3491,
        3501
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x763"
    },
    "1136": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3491,
        3503
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1137": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3491,
        3503
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "SUB"
    },
    "1146": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "AND",
      "path": "5"
    },
    "1147": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1148": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1149": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1151": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1152": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "ADD",
      "path": "5"
    },
    "1153": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1154": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1155": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1156": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1157": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1159": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "ADD",
      "path": "5"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1162": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1163": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1164": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3504
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1165": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1166": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3508
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9A5"
    },
    "1169": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3471,
        3560
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1170": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3471,
        3560
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1171": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3403,
        3411
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x767"
    },
    "1174": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        3403,
        3570
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1175": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3403,
        3570
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1176": {
      "op": "POP"
    },
    "1177": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3587,
        3591
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0x1"
    },
    "1179": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1180": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1181": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "POP",
      "path": "5"
    },
    "1182": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "POP",
      "path": "5"
    },
    "1183": {
      "fn": "ERC20.transferFrom",
      "offset": [
        3209,
        3598
      ],
      "op": "POP",
      "path": "5"
    },
    "1184": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        3209,
        3598
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1185": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1186": {
      "fn": "ERC20.decimals",
      "offset": [
        1392,
        1401
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0x6"
    },
    "1188": {
      "fn": "ERC20.decimals",
      "offset": [
        1392,
        1401
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1189": {
      "fn": "ERC20.decimals",
      "offset": [
        1392,
        1401
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "1191": {
      "fn": "ERC20.decimals",
      "offset": [
        1392,
        1401
      ],
      "op": "AND",
      "path": "5"
    },
    "1192": {
      "fn": "ERC20.decimals",
      "offset": [
        1318,
        1408
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1193": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        1318,
        1408
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1194": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        3992,
        4199
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1195": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4072,
        4076
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1197": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4088,
        4171
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 8,
      "value": "0x40B"
    },
    "1200": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4097,
        4109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B7"
    },
    "1203": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4097,
        4107
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x763"
    },
    "1206": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        4097,
        4109
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1207": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4097,
        4109
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1208": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4111,
        4118
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1209": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4170
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x492"
    },
    "1212": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4159,
        4169
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1213": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4131
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1215": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1217": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4132,
        4144
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C8"
    },
    "1220": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4132,
        4142
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x763"
    },
    "1223": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        4132,
        4144
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1224": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4132,
        4144
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1231": {
      "op": "SHL"
    },
    "1232": {
      "op": "SUB"
    },
    "1233": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1234": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1235": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "AND",
      "path": "5"
    },
    "1236": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1237": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1238": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1240": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1241": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1242": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "ADD",
      "path": "5"
    },
    "1243": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1244": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1245": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1246": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1247": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1249": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1250": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1251": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "ADD",
      "path": "5"
    },
    "1252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1254": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1255": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1256": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4145
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1257": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4154
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1258": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4154
      ],
      "op": "DUP13",
      "path": "5"
    },
    "1259": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4154
      ],
      "op": "AND",
      "path": "5"
    },
    "1260": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4154
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1261": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4154
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1262": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4154
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1263": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4154
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1264": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4154
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1265": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4154
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1266": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4154
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1267": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4154
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1268": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        4120,
        4158
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA3C"
    },
    "1271": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        4120,
        4170
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1272": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1776,
        1893
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1279": {
      "op": "SHL"
    },
    "1280": {
      "op": "SUB"
    },
    "1281": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1868,
        1886
      ],
      "op": "AND",
      "path": "5",
      "statement": 9
    },
    "1282": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1842,
        1849
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1284": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1868,
        1886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1285": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1868,
        1886
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1286": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1868,
        1886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1287": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1868,
        1877
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1289": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1868,
        1886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1291": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1868,
        1886
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1292": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1868,
        1886
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1294": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1868,
        1886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1295": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1868,
        1886
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1296": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1868,
        1886
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1297": {
      "fn": "ERC20.balanceOf",
      "offset": [
        1868,
        1886
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1298": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        1776,
        1893
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1299": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1645,
        1782
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1300": {
      "offset": [
        1236,
        1248
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x51B"
    },
    "1303": {
      "offset": [
        1236,
        1246
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x763"
    },
    "1306": {
      "jump": "i",
      "offset": [
        1236,
        1248
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1307": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1236,
        1248
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1308": {
      "offset": [
        1226,
        1232
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1310": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1226,
        1232
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "offset": [
        1226,
        1232
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1320": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1226,
        1232
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1321": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1226,
        1232
      ],
      "op": "AND",
      "path": "8"
    },
    "1322": {
      "offset": [
        1226,
        1248
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1323": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1226,
        1248
      ],
      "op": "AND",
      "path": "8"
    },
    "1324": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1226,
        1248
      ],
      "op": "EQ",
      "path": "8"
    },
    "1325": {
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x57D"
    },
    "1328": {
      "offset": [
        1218,
        1285
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1329": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1331": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1332": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1333": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1339": {
      "op": "SHL"
    },
    "1340": {
      "offset": [
        1218,
        1285
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1341": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1342": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1344": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1346": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1347": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "ADD",
      "path": "8"
    },
    "1348": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1349": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1350": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1351": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "1353": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1354": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "ADD",
      "path": "8"
    },
    "1355": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1356": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1389": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "1391": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1392": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "ADD",
      "path": "8"
    },
    "1393": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1394": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1395": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1396": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1397": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1398": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1399": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "SUB",
      "path": "8"
    },
    "1400": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "1402": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "ADD",
      "path": "8"
    },
    "1403": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1404": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1405": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1406": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1743,
        1744
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 10,
      "value": "0x0"
    },
    "1408": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1727,
        1733
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1409": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1727,
        1733
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1410": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1706,
        1746
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1412": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1706,
        1746
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1419": {
      "op": "SHL"
    },
    "1420": {
      "op": "SUB"
    },
    "1421": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1727,
        1733
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1422": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1727,
        1733
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1423": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1727,
        1733
      ],
      "op": "AND",
      "path": "8"
    },
    "1424": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1727,
        1733
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1425": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1706,
        1746
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1458": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1706,
        1746
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1459": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1743,
        1744
      ],
      "op": "DUP4",
      "path": "8"
    },
    "1460": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1743,
        1744
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1461": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1706,
        1746
      ],
      "op": "LOG3",
      "path": "8"
    },
    "1462": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1773,
        1774
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 11,
      "value": "0x0"
    },
    "1464": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1756,
        1775
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1465": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1756,
        1775
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "SUB"
    },
    "1474": {
      "op": "NOT"
    },
    "1475": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1756,
        1775
      ],
      "op": "AND",
      "path": "8"
    },
    "1476": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1756,
        1775
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1477": {
      "fn": "Ownable1.renounceOwnership",
      "offset": [
        1756,
        1775
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1478": {
      "fn": "Ownable1.renounceOwnership",
      "jump": "o",
      "offset": [
        1645,
        1782
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1479": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1480": {
      "fn": "ERC20.getOwner",
      "offset": [
        1068,
        1075
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1482": {
      "fn": "ERC20.getOwner",
      "offset": [
        1094,
        1101
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 12,
      "value": "0x5D1"
    },
    "1485": {
      "fn": "ERC20.getOwner",
      "offset": [
        1094,
        1099
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5D6"
    },
    "1488": {
      "fn": "ERC20.getOwner",
      "jump": "i",
      "offset": [
        1094,
        1101
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1489": {
      "fn": "ERC20.getOwner",
      "offset": [
        1094,
        1101
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1490": {
      "fn": "ERC20.getOwner",
      "offset": [
        1087,
        1101
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1491": {
      "fn": "ERC20.getOwner",
      "offset": [
        1087,
        1101
      ],
      "op": "POP",
      "path": "5"
    },
    "1492": {
      "fn": "ERC20.getOwner",
      "offset": [
        1018,
        1108
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1493": {
      "fn": "ERC20.getOwner",
      "jump": "o",
      "offset": [
        1018,
        1108
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1494": {
      "fn": "Ownable1.owner",
      "offset": [
        1022,
        1099
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1495": {
      "fn": "Ownable1.owner",
      "offset": [
        1060,
        1067
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1497": {
      "fn": "Ownable1.owner",
      "offset": [
        1086,
        1092
      ],
      "op": "SLOAD",
      "path": "8",
      "statement": 13
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1504": {
      "op": "SHL"
    },
    "1505": {
      "op": "SUB"
    },
    "1506": {
      "fn": "Ownable1.owner",
      "offset": [
        1086,
        1092
      ],
      "op": "AND",
      "path": "8"
    },
    "1507": {
      "fn": "Ownable1.owner",
      "offset": [
        1022,
        1099
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1508": {
      "fn": "Ownable1.owner",
      "jump": "o",
      "offset": [
        1022,
        1099
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1509": {
      "fn": "ERC20.symbol",
      "offset": [
        1468,
        1562
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1510": {
      "fn": "ERC20.symbol",
      "offset": [
        1548,
        1555
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 14,
      "value": "0x5"
    },
    "1512": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1513": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1514": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1516": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1517": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1518": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1520": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1522": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1526": {
      "op": "NOT"
    },
    "1527": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1530": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1532": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP9",
      "path": "5"
    },
    "1533": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "AND",
      "path": "5"
    },
    "1534": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1535": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "MUL",
      "path": "5"
    },
    "1536": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "ADD",
      "path": "5"
    },
    "1537": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1538": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "1539": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "AND",
      "path": "5"
    },
    "1540": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1541": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1542": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1543": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DIV",
      "path": "5"
    },
    "1544": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1545": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1546": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "ADD",
      "path": "5"
    },
    "1547": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1548": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1549": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DIV",
      "path": "5"
    },
    "1550": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1551": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "MUL",
      "path": "5"
    },
    "1552": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1553": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "ADD",
      "path": "5"
    },
    "1554": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1555": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "ADD",
      "path": "5"
    },
    "1556": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1557": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1558": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1559": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1560": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1561": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1562": {
      "fn": "ERC20.symbol",
      "offset": [
        1516,
        1529
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1564": {
      "fn": "ERC20.symbol",
      "offset": [
        1516,
        1529
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1565": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1566": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1567": {
      "fn": "ERC20.symbol",
      "offset": [
        1548,
        1555
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1568": {
      "fn": "ERC20.symbol",
      "offset": [
        1548,
        1555
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1569": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1570": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "ADD",
      "path": "5"
    },
    "1571": {
      "fn": "ERC20.symbol",
      "offset": [
        1548,
        1555
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1572": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1573": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1574": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1575": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3ED"
    },
    "1578": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1579": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1580": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "1582": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "LT",
      "path": "5"
    },
    "1583": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3C2"
    },
    "1586": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1587": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "1590": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1591": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1592": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1593": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DIV",
      "path": "5"
    },
    "1594": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "MUL",
      "path": "5"
    },
    "1595": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1596": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1597": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1598": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1600": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "ADD",
      "path": "5"
    },
    "1601": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1602": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3ED"
    },
    "1605": {
      "fn": "ERC20.symbol",
      "offset": [
        1541,
        1555
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1606": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4685,
        4989
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1607": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4770,
        4774
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1609": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4786,
        4961
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 15,
      "value": "0x40B"
    },
    "1612": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4808,
        4820
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x653"
    },
    "1615": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4808,
        4818
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x763"
    },
    "1618": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4808,
        4820
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1619": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4808,
        4820
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1620": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4834,
        4841
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1621": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x492"
    },
    "1624": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4894,
        4909
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1625": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1627": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1628": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1629": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "1631": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "ADD",
      "path": "5"
    },
    "1632": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1634": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1635": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1636": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "1638": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1639": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1640": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1642": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "ADD",
      "path": "5"
    },
    "1643": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC1E"
    },
    "1646": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "1648": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1649": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "1650": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4866
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1652": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1654": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4867,
        4879
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x67D"
    },
    "1657": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4867,
        4877
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x763"
    },
    "1660": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4867,
        4879
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1661": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4867,
        4879
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "op": "SUB"
    },
    "1670": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1671": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1672": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "AND",
      "path": "5"
    },
    "1673": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1674": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1675": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1677": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1678": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1679": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "ADD",
      "path": "5"
    },
    "1680": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1681": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1682": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1683": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1684": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1686": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1687": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1688": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "ADD",
      "path": "5"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1691": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1692": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1693": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4880
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1694": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4889
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1695": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4889
      ],
      "op": "DUP14",
      "path": "5"
    },
    "1696": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4889
      ],
      "op": "AND",
      "path": "5"
    },
    "1697": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4889
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1698": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4889
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1699": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4889
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1700": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4889
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1701": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4889
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1702": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4889
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1703": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4889
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1704": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4889
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1705": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4951
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1706": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        4855,
        4893
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9A5"
    },
    "1709": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        4855,
        4951
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1710": {
      "fn": "ERC20.transfer",
      "offset": [
        2095,
        2259
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1711": {
      "fn": "ERC20.transfer",
      "offset": [
        2173,
        2177
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1713": {
      "fn": "ERC20.transfer",
      "offset": [
        2189,
        2231
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 16,
      "value": "0x40B"
    },
    "1716": {
      "fn": "ERC20.transfer",
      "offset": [
        2199,
        2211
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6BB"
    },
    "1719": {
      "fn": "ERC20.transfer",
      "offset": [
        2199,
        2209
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x763"
    },
    "1722": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2199,
        2211
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1723": {
      "fn": "ERC20.transfer",
      "offset": [
        2199,
        2211
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1724": {
      "fn": "ERC20.transfer",
      "offset": [
        2213,
        2222
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1725": {
      "fn": "ERC20.transfer",
      "offset": [
        2224,
        2230
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1726": {
      "fn": "ERC20.transfer",
      "offset": [
        2189,
        2198
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x853"
    },
    "1729": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        2189,
        2231
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1730": {
      "fn": "ERC20.allowance",
      "offset": [
        2316,
        2457
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1737": {
      "op": "SHL"
    },
    "1738": {
      "op": "SUB"
    },
    "1739": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 17
    },
    "1740": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1741": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "AND",
      "path": "5"
    },
    "1742": {
      "fn": "ERC20.allowance",
      "offset": [
        2397,
        2404
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1744": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1745": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1746": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1747": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2434
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1749": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1751": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1752": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1753": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1754": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1756": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1757": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1758": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2441
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1759": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1760": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1761": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1762": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "AND",
      "path": "5"
    },
    "1763": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1764": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1765": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1766": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1767": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1768": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1769": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1770": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1771": {
      "fn": "ERC20.allowance",
      "offset": [
        2423,
        2450
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1772": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        2316,
        2457
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1773": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1774": {
      "offset": [
        1236,
        1248
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x6F5"
    },
    "1777": {
      "offset": [
        1236,
        1246
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x763"
    },
    "1780": {
      "jump": "i",
      "offset": [
        1236,
        1248
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1781": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1236,
        1248
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1782": {
      "offset": [
        1226,
        1232
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1784": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1226,
        1232
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1787": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1789": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1791": {
      "op": "SHL"
    },
    "1792": {
      "op": "SUB"
    },
    "1793": {
      "offset": [
        1226,
        1232
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1794": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1226,
        1232
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1795": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1226,
        1232
      ],
      "op": "AND",
      "path": "8"
    },
    "1796": {
      "offset": [
        1226,
        1248
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "1797": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1226,
        1248
      ],
      "op": "AND",
      "path": "8"
    },
    "1798": {
      "branch": 40,
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1226,
        1248
      ],
      "op": "EQ",
      "path": "8"
    },
    "1799": {
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x757"
    },
    "1802": {
      "branch": 40,
      "offset": [
        1218,
        1285
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "1803": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1805": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "DUP1",
      "path": "8"
    },
    "1806": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1807": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1813": {
      "op": "SHL"
    },
    "1814": {
      "offset": [
        1218,
        1285
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1815": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1816": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "1818": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1820": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1821": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "ADD",
      "path": "8"
    },
    "1822": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1823": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1824": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1825": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x24"
    },
    "1827": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1828": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "ADD",
      "path": "8"
    },
    "1829": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1830": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1863": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x44"
    },
    "1865": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "DUP3",
      "path": "8"
    },
    "1866": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "ADD",
      "path": "8"
    },
    "1867": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "1868": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1869": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "1870": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1871": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1872": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1873": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "SUB",
      "path": "8"
    },
    "1874": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x64"
    },
    "1876": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "ADD",
      "path": "8"
    },
    "1877": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1878": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "REVERT",
      "path": "8"
    },
    "1879": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1218,
        1285
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1880": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        2003,
        2031
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 18,
      "value": "0x760"
    },
    "1883": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        2022,
        2030
      ],
      "op": "DUP2",
      "path": "8"
    },
    "1884": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        2003,
        2021
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xA9D"
    },
    "1887": {
      "fn": "Ownable1.transferOwnership",
      "jump": "i",
      "offset": [
        2003,
        2031
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1888": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        2003,
        2031
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1889": {
      "fn": "Ownable1.transferOwnership",
      "offset": [
        1931,
        2038
      ],
      "op": "POP",
      "path": "8"
    },
    "1890": {
      "fn": "Ownable1.transferOwnership",
      "jump": "o",
      "offset": [
        1931,
        2038
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1891": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1892": {
      "fn": "Context._msgSender",
      "offset": [
        685,
        695
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 19
    },
    "1893": {
      "fn": "Context._msgSender",
      "offset": [
        598,
        702
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1894": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        598,
        702
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1895": {
      "fn": "ERC20._approve",
      "offset": [
        7619,
        7985
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1900": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1902": {
      "op": "SHL"
    },
    "1903": {
      "op": "SUB"
    },
    "1904": {
      "fn": "ERC20._approve",
      "offset": [
        7746,
        7765
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 20
    },
    "1905": {
      "branch": 36,
      "fn": "ERC20._approve",
      "offset": [
        7746,
        7765
      ],
      "op": "AND",
      "path": "5"
    },
    "1906": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7AC"
    },
    "1909": {
      "branch": 36,
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1910": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1912": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1913": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1921": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1922": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1924": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "ADD",
      "path": "5"
    },
    "1925": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1926": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1927": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1929": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "ADD",
      "path": "5"
    },
    "1930": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1931": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1932": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "SUB",
      "path": "5"
    },
    "1933": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1934": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1935": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "1937": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1938": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1939": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1941": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "ADD",
      "path": "5"
    },
    "1942": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1943": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB63"
    },
    "1946": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x24"
    },
    "1948": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1949": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "1950": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1952": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "ADD",
      "path": "5"
    },
    "1953": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1954": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "POP",
      "path": "5"
    },
    "1955": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "POP",
      "path": "5"
    },
    "1956": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1958": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1959": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1960": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1961": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "SUB",
      "path": "5"
    },
    "1962": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1963": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1964": {
      "fn": "ERC20._approve",
      "offset": [
        7738,
        7806
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1971": {
      "op": "SHL"
    },
    "1972": {
      "op": "SUB"
    },
    "1973": {
      "fn": "ERC20._approve",
      "offset": [
        7824,
        7845
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 21
    },
    "1974": {
      "branch": 37,
      "fn": "ERC20._approve",
      "offset": [
        7824,
        7845
      ],
      "op": "AND",
      "path": "5"
    },
    "1975": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7F1"
    },
    "1978": {
      "branch": 37,
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1979": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1981": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1982": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1988": {
      "op": "SHL"
    },
    "1989": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1990": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1991": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1993": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "ADD",
      "path": "5"
    },
    "1994": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1995": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1996": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1998": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "ADD",
      "path": "5"
    },
    "1999": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2000": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2001": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "SUB",
      "path": "5"
    },
    "2002": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2003": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2004": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x22"
    },
    "2006": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2007": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2008": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2010": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "ADD",
      "path": "5"
    },
    "2011": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2012": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC43"
    },
    "2015": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x22"
    },
    "2017": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2018": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "2019": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2021": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "ADD",
      "path": "5"
    },
    "2022": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2023": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "POP",
      "path": "5"
    },
    "2024": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "POP",
      "path": "5"
    },
    "2025": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2027": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2028": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2029": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2030": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "SUB",
      "path": "5"
    },
    "2031": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2032": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2033": {
      "fn": "ERC20._approve",
      "offset": [
        7816,
        7884
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2040": {
      "op": "SHL"
    },
    "2041": {
      "op": "SUB"
    },
    "2042": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 22
    },
    "2043": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2044": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "AND",
      "path": "5"
    },
    "2045": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2047": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2048": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2049": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2050": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7906
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "2052": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2054": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2055": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2056": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2057": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2059": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2060": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2061": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7913
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2062": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2063": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2064": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "AND",
      "path": "5"
    },
    "2065": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2066": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2067": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2068": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2069": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2070": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2071": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2072": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2073": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2074": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7922
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2075": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7931
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2076": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7931
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2077": {
      "fn": "ERC20._approve",
      "offset": [
        7895,
        7931
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2078": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 23
    },
    "2079": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2080": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2081": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2082": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2083": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2084": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2085": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2118": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2119": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2120": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2121": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "SUB",
      "path": "5"
    },
    "2122": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2123": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2124": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "ADD",
      "path": "5"
    },
    "2125": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2126": {
      "fn": "ERC20._approve",
      "offset": [
        7946,
        7978
      ],
      "op": "LOG3",
      "path": "5"
    },
    "2127": {
      "fn": "ERC20._approve",
      "offset": [
        7619,
        7985
      ],
      "op": "POP",
      "path": "5"
    },
    "2128": {
      "fn": "ERC20._approve",
      "offset": [
        7619,
        7985
      ],
      "op": "POP",
      "path": "5"
    },
    "2129": {
      "fn": "ERC20._approve",
      "offset": [
        7619,
        7985
      ],
      "op": "POP",
      "path": "5"
    },
    "2130": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        7619,
        7985
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2131": {
      "fn": "ERC20._transfer",
      "offset": [
        5463,
        5961
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2138": {
      "op": "SHL"
    },
    "2139": {
      "op": "SUB"
    },
    "2140": {
      "fn": "ERC20._transfer",
      "offset": [
        5594,
        5614
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 24
    },
    "2141": {
      "branch": 38,
      "fn": "ERC20._transfer",
      "offset": [
        5594,
        5614
      ],
      "op": "AND",
      "path": "5"
    },
    "2142": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x898"
    },
    "2145": {
      "branch": 38,
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2146": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2148": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2149": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2155": {
      "op": "SHL"
    },
    "2156": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2157": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2158": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2160": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "ADD",
      "path": "5"
    },
    "2161": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2162": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2163": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2165": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "ADD",
      "path": "5"
    },
    "2166": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2167": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2168": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "SUB",
      "path": "5"
    },
    "2169": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2170": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2171": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "2173": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2174": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2175": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2177": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "ADD",
      "path": "5"
    },
    "2178": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2179": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB3E"
    },
    "2182": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x25"
    },
    "2184": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2185": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "2186": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2188": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "ADD",
      "path": "5"
    },
    "2189": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2190": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "POP",
      "path": "5"
    },
    "2191": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "POP",
      "path": "5"
    },
    "2192": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2194": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2195": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2196": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2197": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "SUB",
      "path": "5"
    },
    "2198": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2199": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2200": {
      "fn": "ERC20._transfer",
      "offset": [
        5586,
        5656
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2205": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2207": {
      "op": "SHL"
    },
    "2208": {
      "op": "SUB"
    },
    "2209": {
      "fn": "ERC20._transfer",
      "offset": [
        5674,
        5697
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 25
    },
    "2210": {
      "branch": 39,
      "fn": "ERC20._transfer",
      "offset": [
        5674,
        5697
      ],
      "op": "AND",
      "path": "5"
    },
    "2211": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8DD"
    },
    "2214": {
      "branch": 39,
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2215": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2217": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2218": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2224": {
      "op": "SHL"
    },
    "2225": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2226": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2227": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2229": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "ADD",
      "path": "5"
    },
    "2230": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2231": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2232": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2234": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "ADD",
      "path": "5"
    },
    "2235": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2236": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2237": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "SUB",
      "path": "5"
    },
    "2238": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2239": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2240": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "2242": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2243": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2244": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2246": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "ADD",
      "path": "5"
    },
    "2247": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2248": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBFB"
    },
    "2251": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x23"
    },
    "2253": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2254": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "2255": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2257": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "ADD",
      "path": "5"
    },
    "2258": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2259": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "POP",
      "path": "5"
    },
    "2260": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "POP",
      "path": "5"
    },
    "2261": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2263": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2264": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2265": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2266": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "SUB",
      "path": "5"
    },
    "2267": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2268": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2269": {
      "fn": "ERC20._transfer",
      "offset": [
        5666,
        5737
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2270": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 26,
      "value": "0x91A"
    },
    "2273": {
      "fn": "ERC20._transfer",
      "offset": [
        5790,
        5796
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2274": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2276": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2277": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2278": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "2280": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "ADD",
      "path": "5"
    },
    "2281": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2283": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2284": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2285": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "2287": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2288": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2289": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2291": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "ADD",
      "path": "5"
    },
    "2292": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBD5"
    },
    "2295": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x26"
    },
    "2297": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2298": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "CODECOPY",
      "path": "5"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2305": {
      "op": "SHL"
    },
    "2306": {
      "op": "SUB"
    },
    "2307": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2308": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "AND",
      "path": "5"
    },
    "2309": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2311": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2312": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2313": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2314": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5777
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2316": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2318": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2319": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2321": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2322": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2323": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2324": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5785
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2325": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2326": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5789
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9A5"
    },
    "2329": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5768,
        5839
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2330": {
      "fn": "ERC20._transfer",
      "offset": [
        5768,
        5839
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2337": {
      "op": "SHL"
    },
    "2338": {
      "op": "SUB"
    },
    "2339": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2340": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2341": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "AND",
      "path": "5"
    },
    "2342": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2344": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2345": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2346": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2347": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2349": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2351": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2352": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2354": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2355": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2356": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5765
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2357": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5839
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2358": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5839
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2359": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5839
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2360": {
      "fn": "ERC20._transfer",
      "offset": [
        5748,
        5839
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2361": {
      "fn": "ERC20._transfer",
      "offset": [
        5872,
        5892
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 27
    },
    "2362": {
      "fn": "ERC20._transfer",
      "offset": [
        5872,
        5892
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2363": {
      "fn": "ERC20._transfer",
      "offset": [
        5872,
        5892
      ],
      "op": "AND",
      "path": "5"
    },
    "2364": {
      "fn": "ERC20._transfer",
      "offset": [
        5872,
        5892
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2365": {
      "fn": "ERC20._transfer",
      "offset": [
        5872,
        5892
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2366": {
      "fn": "ERC20._transfer",
      "offset": [
        5872,
        5892
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2367": {
      "fn": "ERC20._transfer",
      "offset": [
        5872,
        5892
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2368": {
      "fn": "ERC20._transfer",
      "offset": [
        5872,
        5904
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x949"
    },
    "2371": {
      "fn": "ERC20._transfer",
      "offset": [
        5872,
        5904
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2372": {
      "fn": "ERC20._transfer",
      "offset": [
        5897,
        5903
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2373": {
      "fn": "ERC20._transfer",
      "offset": [
        5872,
        5896
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA3C"
    },
    "2376": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5872,
        5904
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2377": {
      "fn": "ERC20._transfer",
      "offset": [
        5872,
        5904
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2384": {
      "op": "SHL"
    },
    "2385": {
      "op": "SUB"
    },
    "2386": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2387": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "DUP5",
      "path": "5"
    },
    "2388": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "AND",
      "path": "5"
    },
    "2389": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2391": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2392": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2393": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2394": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5858
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2396": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2398": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2399": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2400": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2401": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2403": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2404": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2405": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2406": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2407": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5904
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2408": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5904
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2409": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5904
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "2410": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5904
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2411": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 28
    },
    "2412": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2413": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2414": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2415": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2416": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2417": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2418": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2419": {
      "fn": "ERC20._transfer",
      "offset": [
        5849,
        5869
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2420": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2421": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2422": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "AND",
      "path": "5"
    },
    "2423": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2424": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2457": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2458": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2459": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2460": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2461": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "SUB",
      "path": "5"
    },
    "2462": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "ADD",
      "path": "5"
    },
    "2463": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2464": {
      "fn": "ERC20._transfer",
      "offset": [
        5919,
        5954
      ],
      "op": "LOG3",
      "path": "5"
    },
    "2465": {
      "fn": "ERC20._transfer",
      "offset": [
        5463,
        5961
      ],
      "op": "POP",
      "path": "5"
    },
    "2466": {
      "fn": "ERC20._transfer",
      "offset": [
        5463,
        5961
      ],
      "op": "POP",
      "path": "5"
    },
    "2467": {
      "fn": "ERC20._transfer",
      "offset": [
        5463,
        5961
      ],
      "op": "POP",
      "path": "5"
    },
    "2468": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        5463,
        5961
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2469": {
      "fn": "SafeMath.sub",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2470": {
      "fn": "SafeMath.sub",
      "offset": [
        5518,
        5525
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2472": {
      "fn": "SafeMath.sub",
      "offset": [
        5553,
        5565
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 29
    },
    "2473": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2474": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2475": {
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "GT",
      "path": "10"
    },
    "2476": {
      "branch": 42,
      "fn": "SafeMath.sub",
      "offset": [
        5545,
        5551
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2477": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA34"
    },
    "2480": {
      "branch": 42,
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2481": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2483": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2484": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2490": {
      "op": "SHL"
    },
    "2491": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2492": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2493": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2495": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "10"
    },
    "2496": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2497": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2498": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2500": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "10"
    },
    "2501": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2502": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2503": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "10"
    },
    "2504": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2505": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2506": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2507": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2508": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2509": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2510": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2511": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2512": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2514": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "10"
    },
    "2515": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2516": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "10"
    },
    "2517": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2518": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2519": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2520": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2522": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "10"
    },
    "2523": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2524": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2525": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2526": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2527": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2529": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2530": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2531": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2532": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "LT",
      "path": "10"
    },
    "2533": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2534": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9F9"
    },
    "2537": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2538": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2539": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2540": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "10"
    },
    "2541": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2542": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2543": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2544": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "10"
    },
    "2545": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2546": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2548": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "10"
    },
    "2549": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x9E1"
    },
    "2552": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2553": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2554": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "10"
    },
    "2555": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "10"
    },
    "2556": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "10"
    },
    "2557": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "10"
    },
    "2558": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2559": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "10"
    },
    "2560": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2561": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2562": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "10"
    },
    "2563": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2564": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2566": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "10"
    },
    "2567": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2568": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2569": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA26"
    },
    "2572": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2573": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2574": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2575": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "10"
    },
    "2576": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2577": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2578": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2580": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2581": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2583": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "10"
    },
    "2584": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x100"
    },
    "2587": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "EXP",
      "path": "10"
    },
    "2588": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "10"
    },
    "2589": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "NOT",
      "path": "10"
    },
    "2590": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "AND",
      "path": "10"
    },
    "2591": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2592": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2593": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2595": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "ADD",
      "path": "10"
    },
    "2596": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2597": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "10"
    },
    "2598": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2599": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "10"
    },
    "2600": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2601": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "10"
    },
    "2602": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "10"
    },
    "2603": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "POP",
      "path": "10"
    },
    "2604": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2606": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2607": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2608": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2609": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SUB",
      "path": "10"
    },
    "2610": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2611": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2612": {
      "fn": "SafeMath.sub",
      "offset": [
        5537,
        5566
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2613": {
      "op": "POP"
    },
    "2614": {
      "op": "POP"
    },
    "2615": {
      "op": "POP"
    },
    "2616": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 30
    },
    "2617": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SUB",
      "path": "10"
    },
    "2618": {
      "fn": "SafeMath.sub",
      "offset": [
        5583,
        5588
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2619": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        5432,
        5595
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2620": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2621": {
      "fn": "SafeMath.add",
      "offset": [
        2748,
        2755
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2623": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2624": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2625": {
      "fn": "SafeMath.add",
      "offset": [
        2779,
        2784
      ],
      "op": "ADD",
      "path": "10"
    },
    "2626": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP4",
      "path": "10",
      "statement": 31
    },
    "2627": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2628": {
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "LT",
      "path": "10"
    },
    "2629": {
      "branch": 43,
      "fn": "SafeMath.add",
      "offset": [
        2802,
        2808
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2630": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA96"
    },
    "2633": {
      "branch": 43,
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2634": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2636": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2637": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2638": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2642": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2644": {
      "op": "SHL"
    },
    "2645": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2646": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2647": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2649": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "2651": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2652": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "10"
    },
    "2653": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2654": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1B"
    },
    "2656": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x24"
    },
    "2658": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2659": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "10"
    },
    "2660": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2661": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "2694": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x44"
    },
    "2696": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2697": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "10"
    },
    "2698": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2699": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2700": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2701": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2702": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2703": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2704": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SUB",
      "path": "10"
    },
    "2705": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x64"
    },
    "2707": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "ADD",
      "path": "10"
    },
    "2708": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2709": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2710": {
      "fn": "SafeMath.add",
      "offset": [
        2794,
        2840
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2711": {
      "fn": "SafeMath.add",
      "offset": [
        2857,
        2858
      ],
      "op": "SWAP4",
      "path": "10",
      "statement": 32
    },
    "2712": {
      "fn": "SafeMath.add",
      "offset": [
        2690,
        2865
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2713": {
      "op": "POP"
    },
    "2714": {
      "op": "POP"
    },
    "2715": {
      "op": "POP"
    },
    "2716": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        2690,
        2865
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2717": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2139,
        2364
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2724": {
      "op": "SHL"
    },
    "2725": {
      "op": "SUB"
    },
    "2726": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2212,
        2234
      ],
      "op": "DUP2",
      "path": "8",
      "statement": 33
    },
    "2727": {
      "branch": 41,
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2212,
        2234
      ],
      "op": "AND",
      "path": "8"
    },
    "2728": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xAE2"
    },
    "2731": {
      "branch": 41,
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2732": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2734": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2735": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2741": {
      "op": "SHL"
    },
    "2742": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2743": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2744": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "2746": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "ADD",
      "path": "8"
    },
    "2747": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2748": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2749": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2751": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "ADD",
      "path": "8"
    },
    "2752": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2753": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2754": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "SUB",
      "path": "8"
    },
    "2755": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2756": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2757": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x26"
    },
    "2759": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2760": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2761": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2763": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "ADD",
      "path": "8"
    },
    "2764": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2765": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB87"
    },
    "2768": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x26"
    },
    "2770": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2771": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "CODECOPY",
      "path": "8"
    },
    "2772": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2774": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "ADD",
      "path": "8"
    },
    "2775": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2776": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "POP",
      "path": "8"
    },
    "2777": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "POP",
      "path": "8"
    },
    "2778": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2780": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2781": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2782": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2783": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "SUB",
      "path": "8"
    },
    "2784": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2785": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "REVERT",
      "path": "8"
    },
    "2786": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2204,
        2277
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2787": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2313,
        2319
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 34,
      "value": "0x0"
    },
    "2789": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2313,
        2319
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2790": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2313,
        2319
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2791": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2292,
        2330
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2793": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2292,
        2330
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2800": {
      "op": "SHL"
    },
    "2801": {
      "op": "SUB"
    },
    "2802": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2292,
        2330
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2803": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2292,
        2330
      ],
      "op": "DUP6",
      "path": "8"
    },
    "2804": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2292,
        2330
      ],
      "op": "AND",
      "path": "8"
    },
    "2805": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2292,
        2330
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "2806": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2313,
        2319
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2807": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2313,
        2319
      ],
      "op": "AND",
      "path": "8"
    },
    "2808": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2313,
        2319
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2809": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2292,
        2330
      ],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2842": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2292,
        2330
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2843": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2292,
        2330
      ],
      "op": "LOG3",
      "path": "8"
    },
    "2844": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2346
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 35,
      "value": "0x0"
    },
    "2846": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2847": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2854": {
      "op": "SHL"
    },
    "2855": {
      "op": "SUB"
    },
    "2856": {
      "op": "NOT"
    },
    "2857": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "AND",
      "path": "8"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2864": {
      "op": "SHL"
    },
    "2865": {
      "op": "SUB"
    },
    "2866": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2867": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2868": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "2869": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "AND",
      "path": "8"
    },
    "2870": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2871": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2872": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2873": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "OR",
      "path": "8"
    },
    "2874": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2875": {
      "fn": "Ownable1._transferOwnership",
      "offset": [
        2340,
        2357
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "2876": {
      "fn": "Ownable1._transferOwnership",
      "jump": "o",
      "offset": [
        2139,
        2364
      ],
      "op": "JUMP",
      "path": "8"
    }
  },
  "sha1": "76c7b54b5f6530b9cc762a451d492d9c0f656af9",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0;\n\nimport \"./Ownable1.sol\";\n\nimport \"./Context.sol\";\nimport \"./SafeMath.sol\";\nimport \"./Address.sol\";\nimport \"./ERC20/IERC20.sol\";\n\ncontract ERC20 is Context, Ownable1, IERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    constructor() public {}\n\n    /**\n     * @dev sets initials supply and the owner\n     */\n    function initializeERC20(string memory name, string memory symbol, uint8 decimals, uint256 initialSupply, address ownerAddr) internal {\n        super.initializeOwner(ownerAddr);\n\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n        _mint(ownerAddr, initialSupply);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function getOwner() public override view returns (address) {\n        return owner();\n    }\n\n    /**\n     * @dev Returns the token name.\n     */\n    function name() public override view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token decimals.\n     */\n    function decimals() public override view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev Returns the token symbol.\n     */\n    function symbol() public override view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {BEP20-totalSupply}.\n     */\n    function totalSupply() public override view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {BEP20-balanceOf}.\n     */\n    function balanceOf(address account) public override view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {BEP20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-allowance}.\n     */\n    function allowance(address owner, address spender) public override view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {BEP20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {BEP20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {BEP20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for `sender`\"s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public override returns (bool)\n    {\n        _transfer(sender, recipient, amount);\n        _approve(\n            sender,\n            _msgSender(),\n            _allowances[sender][_msgSender()].sub(amount, \"BEP20: transfer amount exceeds allowance\")\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {BEP20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender].sub(subtractedValue, \"BEP20: decreased allowance below zero\")\n        );\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal\n    {\n        require(sender != address(0), \"BEP20: transfer from the zero address\");\n        require(recipient != address(0), \"BEP20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount, \"BEP20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal {\n        require(account != address(0), \"BEP20: burn from the zero address\");\n\n        _balances[account] = _balances[account].sub(amount, \"BEP20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal\n    {\n        require(owner != address(0), \"BEP20: approve from the zero address\");\n        require(spender != address(0), \"BEP20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller\"s allowance.\n     *\n     * See {_burn} and {_approve}.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(\n            account,\n            _msgSender(),\n            _allowances[account][_msgSender()].sub(amount, \"BEP20: burn amount exceeds allowance\")\n        );\n    }\n}\n\n",
  "sourceMap": "188:8252:5:-:0;;;547:23;;;;;;;;;;188:8252;;;;;;",
  "sourcePath": "contracts/lib/ERC20.sol",
  "type": "contract"
}